---
title: "Short_note_captured_phenotype"
format: html
---

```{r loading used packages and functions}
library(stringr)# handling string format in R 
library(car) # Anova analysis
library(ggeffects) # prediction of effects from regression models
library(ggplot2) #graphs
library(ggtext) #customization of ggplot legends
library(ggpubr) #custom graph (comparison bars)


library(data.table) #large dataset handling 

library(lme4) #mixed regression models
library(DHARMa) #model diagnostic (mixed models/non linear models)
library(rsq) #diverse rsquared including Nagelkerke

library(emmeans)#comparison of marginal means from GLM

library(sf) #spatial operations


library(texreg) 
library(kableExtra) #export table in Latex format



library(lubridate) #handling date data





#fisher.test from scinded tables:

fisher.test2 <- function(a, b) {
    return(fisher.test(cbind(a, b)))
}


```

# Importing data

```{r importing data}

# Strandings:

Strandings <- fread("~/Strandings_journal_version.csv")

# Declaration data:

Declaration_Bycatch = fread("~/Declaration_Bycatch_journal_version.csv")

# Observation data (OBSMER programme):

OBSMER_Bycatch <- fread("~/OBSMER_Bycatch_journal_version.csv")



Strandings[, TRIMESTER := as.character(TRIMESTER)]
Declaration_Bycatch[, TRIMESTER := as.character(TRIMESTER)]
OBSMER_Bycatch[, TRIMESTER := as.character(TRIMESTER)] # converting trimester in categories, not numbers



Declaration_Bycatch[TARGETED_TAXA == "MZZ - Osteichthyes", TARGETED_TAXA:=NA]
OBSMER_Bycatch[TARGETED_TAXA == "MZZ - Osteichthyes", TARGETED_TAXA:=NA] # we considered the declarations of Osteichtyes to be equivalent to declarations of an unknown taxon, and therefore considered these values equivalent to NA for our analyses




# Merging data shared by declaration and observation datasets:

Decl_Obs_Merged_Bycatch = rbind( cbind(Declaration_Bycatch[!is.na(BODY_MASS), .(SPECIES, ICES_DIV, TRIMESTER, YEAR, FISHING_GEAR, MESH_SIZE, TARGETED_TAXA, TARGETED_ISSCAAP, BODY_MASS)], ORIGIN= "DECL"), cbind(OBSMER_Bycatch[!is.na(BODY_MASS), .(SPECIES, ICES_DIV, TRIMESTER, YEAR, FISHING_GEAR, MESH_SIZE, TARGETED_TAXA, TARGETED_ISSCAAP, BODY_MASS)], ORIGIN= "OBSMER"), use.names=F)


# Merging data shared by declaration and observation datasets, but only considering explanatory variables:

Decl_Obs_Merged_Bycatch_explanatory = rbind( cbind(Declaration_Bycatch[, .(SPECIES, ICES_DIV, TRIMESTER, YEAR, FISHING_GEAR, MESH_SIZE, TARGETED_TAXA, TARGETED_ISSCAAP)], ORIGIN= "DECL"), cbind(OBSMER_Bycatch[, .(SPECIES, ICES_DIV, TRIMESTER, YEAR, FISHING_GEAR, MESH_SIZE, TARGETED_TAXA, TARGETED_ISSCAAP)], ORIGIN= "OBSMER"), use.names=F)




```

## Preliminary statistics

We first described the used datasets (sample size, removal of explanatory variables too rarely described or too collinear with others, correlation between studied response traits). We then explored the distribution of captures as a function of external variables (spatial, temporal, environmental).

```{r preliminary stat}


#### Sample sizes:

# Distribution of recorded captured species (declaration and observation datasets / Strandings):

table(Decl_Obs_Merged_Bycatch_explanatory$SPECIES)
table(Strandings$SPECIES)


# Distribution of by-catch among recording programmes:

table(Decl_Obs_Merged_Bycatch_explanatory[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"),]$ORIGIN)






#### Removal of variables with two many missing values or too strong correlation patterns:


# Distribution of missing values in the used datasets:


apply(Strandings, 2, function(x) table(is.na(x))) # few missing values in proportion, except for body mass, which estimations are rarely reported

apply(Declaration_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"),], 2, function(x) table(is.na(x))) # in particular, targeted taxa were reported in ~75% of cases (very few missing values otherwise)

apply(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"),], 2, function(x) table(is.na(x))) # in contrast to body size, the sex and weight of individuals is often not reported / gear speed measurement was only available for trawls resulting in a particularly high proportion of missing values (~48%), others fishing techniques variables are associated with a non negligible amount of missing values (gear depth: ~14%, presence of an acoustic deterrent: ~17%)



# Particularly important correlation/association patterns between explanatory variables:

# We have only detailed here the most important correlation/association patterns that prevent variables from being used together in all subsequent analyses.


kruskal.test(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$GEAR_DIMENSION ~ OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$FISHING_GEAR)
kruskal.test(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$GEAR_DIMENSION ~ OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$TARGETED_TAXA)
cor.test(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$GEAR_DIMENSION, OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$MESH_SIZE, method = "spearman")


ggplot(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], aes(FISHING_GEAR, GEAR_DIMENSION)) + geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], aes(TARGETED_TAXA, GEAR_DIMENSION)) + geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], aes(MESH_SIZE, GEAR_DIMENSION)) + geom_point()


#Strong correlation of fishing gear dimension with the type of fishing gear (way higher for gillnets compared to trawls and seines), the targeted taxa (particularly high for benthic species as pleuronectiformes or Lophius spp) and the mesh size (globally increase with it)



kruskal.test(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$GEAR_DEPTH ~ OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$TARGETED_TAXA)
ggplot(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], aes(TARGETED_TAXA, GEAR_DEPTH)) + geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# as it could be expected gear depth is highly dependent of the targeted taxa habitat


# gear speed, gear, depth and gear dimension were removed from analyses due to too many missing values and/or too strong correlations with other explanatory variables









##### Correlations between measured traits:



cor.test(Strandings[SPECIES == "Delphinus delphis", BODY_LENGTH], Strandings[SPECIES == "Delphinus delphis", BODY_MASS], method = "spearman") 
cor.test(Strandings[SPECIES == "Phocoena phocoena", BODY_LENGTH], Strandings[SPECIES == "Phocoena phocoena", BODY_MASS], method = "spearman")

cor.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis", BODY_LENGTH], OBSMER_Bycatch[SPECIES == "Delphinus delphis", BODY_MASS], method = "spearman") 
cor.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena", BODY_LENGTH], OBSMER_Bycatch[SPECIES == "Phocoena phocoena", BODY_MASS], method = "spearman") 



wilcox.test(Strandings[SPECIES == "Delphinus delphis", BODY_LENGTH] ~ Strandings[SPECIES == "Delphinus delphis", SEX]) 
ggplot(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX)], aes(SEX, BODY_LENGTH)) + geom_boxplot()
wilcox.test(Strandings[SPECIES == "Phocoena phocoena", BODY_LENGTH] ~ Strandings[SPECIES == "Phocoena phocoena", SEX]) 

wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis", BODY_LENGTH]~OBSMER_Bycatch[SPECIES == "Delphinus delphis", SEX]) 
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena", BODY_LENGTH]~OBSMER_Bycatch[SPECIES == "Phocoena phocoena", SEX]) 





wilcox.test(Strandings[SPECIES == "Delphinus delphis", BODY_MASS]~Strandings[SPECIES == "Delphinus delphis", SEX]) 
ggplot(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX)], aes(SEX, BODY_MASS)) + geom_boxplot()
wilcox.test(Strandings[SPECIES == "Phocoena phocoena", BODY_MASS]~Strandings[SPECIES == "Phocoena phocoena", SEX]) 


wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis", BODY_MASS]~OBSMER_Bycatch[SPECIES == "Delphinus delphis", SEX]) 
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena", BODY_MASS]~OBSMER_Bycatch[SPECIES == "Phocoena phocoena", SEX]) 




mean(Strandings[SPECIES == "Delphinus delphis" & SEX == "Male", BODY_LENGTH], na.rm = T)
sd(Strandings[SPECIES == "Delphinus delphis" & SEX == "Male", BODY_LENGTH], na.rm = T)
mean(Strandings[SPECIES == "Delphinus delphis" & SEX == "Female", BODY_LENGTH], na.rm = T)
sd(Strandings[SPECIES == "Delphinus delphis" & SEX == "Female", BODY_LENGTH], na.rm = T)


mean(Strandings[SPECIES == "Delphinus delphis" & SEX == "Male", BODY_MASS], na.rm = T)
sd(Strandings[SPECIES == "Delphinus delphis" & SEX == "Male", BODY_MASS], na.rm = T)
mean(Strandings[SPECIES == "Delphinus delphis" & SEX == "Female", BODY_MASS], na.rm = T)
sd(Strandings[SPECIES == "Delphinus delphis" & SEX == "Female", BODY_MASS], na.rm = T)








##### Distribution of captures as a function of external variables (spatial, temporal, environmental):


  ## Spatial distribution:

table( Decl_Obs_Merged_Bycatch_explanatory[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"),]$SPECIES,  Decl_Obs_Merged_Bycatch_explanatory[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"),]$ICES_DIV)

table(Strandings$SPECIES, Strandings$ICES_DIV)

# these values were then used to produce a map in QGIS, using map background provided by the ICES
# a map of abundance corrected by sampling effort (for observation data only) was also produced (see below)



# Map of corrected abundance:



observation_effort <- readRDS("~/observation_effort.rds")

observation_effort_spat=tapply(observation_effort$DURATION_OP, observation_effort$ICES_DIV, sum) # sampling effort (OBSMER) per ICES division
observation_effort_spat=as.data.frame(observation_effort_spat)
observation_effort_spat$icesdiv=rownames(observation_effort_spat)


allgeo <- readRDS("~/allgeo.rds") # spatial information file

allgeo=allgeo[allgeo$offname %in% c("27.4.c", "27.7.d", "27.7.e", "27.7.f", "27.7.g", "27.7.h", "27.7.j", "27.7.k", "27.8.a", "27.8.b", "27.8.c", "27.8.d"),] #selection of sampled ices divisions 



posi_bycatch = unlist(by(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$ICES_DIV, function(x) tapply(x$SPECIES, x$SPECIES, length))) # number of individuals by-caught per ICES division and species


posi_bycatch = as.data.frame(posi_bycatch)
posi_bycatch$icesdiv = str_sub(rownames(posi_bycatch), 1, 6)
posi_bycatch$Species = str_sub(rownames(posi_bycatch), 8, -1L) 


posi_bycatch = merge(posi_bycatch, observation_effort_spat)
posi_bycatch$bycatch_rate = posi_bycatch$posi_bycatch / posi_bycatch$observation_effort_spat


posi_bycatch = merge(posi_bycatch, allgeo)


world_map = map_data("world")
rangex <- c(-18, 9)
rangey <- c(40, 55)


ggplot(st_as_sf(posi_bycatch)) +
  geom_sf(aes(fill = bycatch_rate)) +
  scale_fill_viridis_c(name = "By-catch rate\n(number of captured dolphin\nper minute of fishing activity\nobservation)")  +
  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), fill = "white", color = "black") + 
  coord_sf(rangex, rangey) + 
  facet_wrap(~ Species, labeller =  as_labeller(c('Delphinus delphis' = "Common dolphin", 'Phocoena phocoena' = "Harbour porpoise"))) +
  xlab("Longitude") + ylab("Latitude") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic"))

ggsave("Figure_S3.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





  ## Temporal distribution:

# Years:



ggplot(dcast(Strandings[!is.na(YEAR)], formula = YEAR + SPECIES ~ ., fun.aggregate = length), aes(YEAR, .)) +
  geom_bar(stat = "identity")  + 
  facet_wrap(~ SPECIES) +
  xlab("Year") + ylab("Number of stranded individuals") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Strandings per year")

ggsave("Figure_S4A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



ggplot(dcast(Decl_Obs_Merged_Bycatch_explanatory[!is.na(YEAR) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")],
             formula = YEAR + SPECIES ~ .,
             fun.aggregate = length),
       aes(YEAR, .)) + 
  geom_bar(stat = "identity")  + 
  facet_wrap( ~ SPECIES) + 
  xlab("Year") + ylab("Number of by-caught individuals") + 
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catches per year (declaration and observation data)")

ggsave("Figure_S4B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



observation_effort_year = tapply(observation_effort$DURATION_OP, str_sub(observation_effort$END_TIMING, 7, 10), sum) # sampling effort (OBSMER) per year
observation_effort_year = as.data.frame(observation_effort_year)
observation_effort_year$YEAR = as.integer(rownames(observation_effort_year))



bycatch_rate_year = merge(dcast(OBSMER_Bycatch[!is.na(YEAR) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = YEAR + SPECIES ~ ., fun.aggregate = length), observation_effort_year, by = "YEAR")

bycatch_rate_year$Bycatch_rate = bycatch_rate_year$. / bycatch_rate_year$observation_effort_year


ggplot(bycatch_rate_year, aes(YEAR, Bycatch_rate)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES)  +
  xlab("Year") + ylab("Number of by-caught individuals\nper minute of fishing activity") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catch rate per year (observation data)")


ggsave("Figure_S4C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





  ###Trimester:



ggplot(dcast(Strandings[!is.na(TRIMESTER)], formula = TRIMESTER + SPECIES ~ ., fun.aggregate = length), aes(TRIMESTER, .)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES)  +
  xlab("Trimester") + ylab("Number of stranded individuals") + 
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Strandings per trimester")

ggsave("Figure_S5A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



ggplot(dcast(Decl_Obs_Merged_Bycatch_explanatory[!is.na(TRIMESTER) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = TRIMESTER + SPECIES ~ ., fun.aggregate = length), aes(TRIMESTER, .)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES) +
  xlab("Trimester") + ylab("Number of by-caught individuals") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catches per trimester (declaration and observation data)")

ggsave("Figure_S5B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





observation_effort_trimester = tapply(observation_effort$DURATION_OP, ceiling(as.numeric(str_sub(observation_effort$END_TIMING,4,5))/3), sum) # sampling effort (OBSMER) per trimester
observation_effort_trimester = as.data.frame(observation_effort_trimester)
observation_effort_trimester$TRIMESTER = rownames(observation_effort_trimester)



bycatch_rate_trimester = merge(dcast(OBSMER_Bycatch[!is.na(TRIMESTER) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = TRIMESTER + SPECIES ~ ., fun.aggregate = length), observation_effort_trimester, by = "TRIMESTER")

bycatch_rate_trimester$Bycatch_rate = bycatch_rate_trimester$. / bycatch_rate_trimester$observation_effort_trimester


ggplot(bycatch_rate_trimester, aes(TRIMESTER, Bycatch_rate)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES)  +
  xlab("Trimester") + ylab("Number of by-caught individuals\nper minute of fishing activity") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catch rate per trimester (observation data)")

ggsave("Figure_S5C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)









  ### Daytime :






ggplot(dcast(OBSMER_Bycatch[!is.na(TIMING_OP) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = TIMING_OP + SPECIES ~ ., fun.aggregate = length), aes(TIMING_OP, .)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES) +
  xlab("Daytime of hauling") + ylab("Number of by-caught individuals") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catches per hauling period (observation data)")  +
  scale_x_discrete(limit=c("Night (00:00 - 06:00)", "Morning (06:00 - 12:00)", "Afternoon (12:00 - 18:00)", "Evening (18:00 - 00:00)") ,labels=c("Night\n(00:00 - 06:00)", "Morning\n(06:00 - 12:00)", "Afternoon\n(12:00 - 18:00)", "Evening\n(18:00 - 00:00)"))




observation_effort_daytime = tapply(observation_effort$DURATION_OP, as.character(ceiling((hour(dmy_hms(observation_effort$END_TIMING)) +1)/6)), sum)  # sampling effort (OBSMER) per period of the day (6-hour periods)
observation_effort_daytime = as.data.frame(observation_effort_daytime)
observation_effort_daytime$TIMING_OP = rownames(observation_effort_daytime)

observation_effort_daytime[observation_effort_daytime$TIMING_OP == 1,]$TIMING_OP = "Night (00:00 - 06:00)"
observation_effort_daytime[observation_effort_daytime$TIMING_OP == 2,]$TIMING_OP = "Morning (06:00 - 12:00)"
observation_effort_daytime[observation_effort_daytime$TIMING_OP == 3,]$TIMING_OP = "Afternoon (12:00 - 18:00)"
observation_effort_daytime[observation_effort_daytime$TIMING_OP == 4,]$TIMING_OP = "Evening (18:00 - 00:00)"



bycatch_rate_daytime = merge(dcast(OBSMER_Bycatch[!is.na(TIMING_OP) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = TIMING_OP + SPECIES ~ ., fun.aggregate = length), observation_effort_daytime, by = "TIMING_OP")

bycatch_rate_daytime$Bycatch_rate = bycatch_rate_daytime$. / bycatch_rate_daytime$observation_effort_daytime


ggplot(bycatch_rate_daytime, aes(TIMING_OP, Bycatch_rate)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~SPECIES)  +
  xlab("Daytime of hauling") + ylab("Number of by-caught individuals\nper minute of fishing activity") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catch rate per hauling period (observation data)")  +
  scale_x_discrete(limit=c("Night (00:00 - 06:00)", "Morning (06:00 - 12:00)", "Afternoon (12:00 - 18:00)", "Evening (18:00 - 00:00)") ,labels=c("Night\n(00:00 - 06:00)", "Morning\n(06:00 - 12:00)", "Afternoon\n(12:00 - 18:00)", "Evening\n(18:00 - 00:00)"))


ggsave("Figure_S6.pdf", device = "pdf", units = "in", width = 14, height = 8.5)











# Sea state:






ggplot(dcast(OBSMER_Bycatch[SEA_STATE != "" & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = SEA_STATE + SPECIES ~ ., fun.aggregate = length), aes(SEA_STATE, .)) +
  geom_bar(stat = "identity")  +
  facet_wrap(~ SPECIES) +
  xlab("Sea condition when hauling (Douglas scale)") + ylab("Number of by-caught individuals") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catches per hauling condition (observation data)") 



observation_effort_sea_state = tapply(observation_effort$DURATION_OP, observation_effort$SEA_STATE, sum)  # sampling effort (OBSMER) per sea state condition
observation_effort_sea_state = as.data.frame(observation_effort_sea_state)
observation_effort_sea_state$SEA_STATE = rownames(observation_effort_sea_state)


bycatch_rate_sea_state = merge(dcast(OBSMER_Bycatch[SEA_STATE != "" & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")], formula = SEA_STATE + SPECIES ~ ., fun.aggregate = length), observation_effort_sea_state, by = "SEA_STATE")

bycatch_rate_sea_state$Bycatch_rate = bycatch_rate_sea_state$. / bycatch_rate_sea_state$observation_effort_sea_state


ggplot(bycatch_rate_sea_state, aes(SEA_STATE, Bycatch_rate)) +
  geom_bar(stat = "identity") + 
  facet_wrap(~SPECIES) +
  xlab("Sea condition when hauling (Douglas scale)") + ylab("Number of by-caught individuals\nper minute of fishing activity") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("By-catch rate per hauling condition (observation data)")

  
ggsave("Figure_S7.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



```



# Phenotypic sensitivity to bycatch

We have separated the analysis of stranding data from the declaration and observation data because they may be partially redundant (with no way to verify this), and because their collection is fundamentally different (only some of the captured dolphins actually strand, whereas theoretically we should detect all captures through observation and reporting).  

For each dataset, we first described the distribution of studied traits and compared the trait values of by-caught and stranded individuals with key population values reported in the literature for each of the species studied (for both sexes: body length at maturity, asymptotic adult body length). We then examined whether different phenotypic sensitivity profiles emerged in space or time by implementing a generalised linear model for each of the traits studied (linear model for body length, logistic regression for sex) as a function of year, trimester and ICES division of by-catch.





## Stranding data

### Distribution of traits and comparisons with key population values



```{r sensitivity stranding - distribution comparison}


# Creation of species-specific datasets:

data_strandings_PHO = Strandings[SPECIES == "Phocoena phocoena"]
data_strandings_DEL = Strandings[SPECIES == "Delphinus delphis"]





# sex-ratio of strandings:



ggplot(dcast(na.omit(Strandings[, .(SEX, SPECIES)]), SEX + SPECIES ~ ., fun.aggregate = length), aes( x = SPECIES, y = .)) +
  geom_bar(aes(fill = SEX), stat = "identity", position = "dodge")  +
  ggtitle("Sex distribution of strandings") + 
  labs(x = "Captured species", y = "Number of individuals", fill = "Sex") +
  scale_fill_grey() +  theme(text = element_text(size = 30))



binom.test(table(Strandings[, .(SEX, SPECIES)][SPECIES == "Delphinus delphis"][,SEX]))

binom.test(table(Strandings[, .(SEX, SPECIES)][SPECIES == "Phocoena phocoena"][,SEX]))







# strandings body mass distribution:


ggplot(Strandings[, .(BODY_MASS, SPECIES)], aes( x = SPECIES, y = BODY_MASS)) +
  geom_violin() + geom_boxplot(width = 0.1) +
  ggtitle("Body mass of stranded individuals") +
  labs(x = "Species", y = "Body mass (kg)") + 
  theme(text = element_text(size = 30))



    ### by sex:

ggplot(Strandings[!is.na(SEX), .(BODY_MASS, paste0(SPECIES, "\n(", SEX, ")"))], aes( x = V2, y = BODY_MASS)) +
  geom_violin() + geom_boxplot(width = 0.1) + 
  ggtitle("Body mass of stranded individuals") + 
  labs(x = "Species", y = "Body mass (kg)") + 
  theme(text = element_text(size = 30))






# strandings body length distribution:



biblio = data.frame(ref = c("Murphy et al. 2021", "Murphy et al. 2021", "Murphy and Rogan 2006", "Murphy and Rogan 2006", "Perrin and Reilly 1984", "Perrin and Reilly 1984", "Murphy et al. 2013", "Murphy et al. 2013","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003"),
                    param = c("Sexual maturity\n(males, Delphinus delphis)", "Sexual maturity\n(females, Delphinus delphis)", "Asymptotic length\n(males, Delphinus delphis)", "Asymptotic length\n(females, Delphinus delphis)", "Sexual maturity\n(males, Delphinus delphis)", "Sexual maturity\n(females, Delphinus delphis)", "Asymptotic length\n(males, Delphinus delphis)", "Asymptotic length\n(females, Delphinus delphis)","Sexual maturity\n(males, Phocoena phocoena)", "Sexual maturity\n(females, Phocoena phocoena)", "Asymptotic length\n(males, Phocoena phocoena)", "Asymptotic length\n(females, Phocoena phocoena)", "Sexual maturity\n(males, Phocoena phocoena)", "Sexual maturity\n(females, Phocoena phocoena)", "Asymptotic length\n(males, Phocoena phocoena)", "Asymptotic length\n(females, Phocoena phocoena)"),
                    VALEUR = c(206, 188, 211, 197, 200, 190, 209, 206, 127, 138, 141, 153, 135, 147, 149, 163))

# biblio: key population values reported in the literature for each of the species studied (for both sexes: body length at maturity, asymptotic adult body length)




ggplot(Strandings[, .(paste0(SPECIES, " (", SEX, ")"), BODY_LENGTH)], aes( x = V1, y = BODY_LENGTH)) +
  geom_violin(width = 1) + geom_boxplot(width = 0.1) +
  geom_point(data = biblio, mapping = aes(x = param, y = VALEUR, shape = ref), size = 2) +
  ggtitle("Body length of stranded individuals\n(compared with literature life-history traits)") +  
  labs(x = "Species, sex and literature estimates", y = "Body length (cm)", shape = "Bibliographic\nreferences") + 
  theme(text = element_text(size = 20))  +  theme(axis.text.x = element_text(angle = 55, hjust = 1))  +
  scale_x_discrete(limits = c("Delphinus delphis\n(Female)","Sexual maturity\n(females, Delphinus delphis)","Asymptotic length\n(females, Delphinus delphis)","Delphinus delphis\n(Male)","Sexual maturity\n(males, Delphinus delphis)","Asymptotic length\n(males, Delphinus delphis)", "Phocoena phocoena\n(Female)","Sexual maturity\n(females, Phocoena phocoena)","Asymptotic length\n(females, Phocoena phocoena)","Phocoena phocoena\n(Male)","Sexual maturity\n(males, Phocoena phocoena)","Asymptotic length\n(males, Phocoena phocoena)")) 




wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=211)
wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=209)

wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=206)
wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=200)

# size significantly inferior to length at maturity and asymptotic length for male common dolphin (N=1821)



wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=206)
wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=197)

wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=190)
wilcox.test(Strandings[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=188)

# size significantly inferior to length at maturity and asymptotic length for female common dolphin (N=1348)



wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=149)
wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=141)

wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=135)
wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=127)

# size significantly inferior to length at maturity or adult asymptotic length for male harbour porpoise (N=466)



wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=163)
wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=153)

wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=147)
wilcox.test(Strandings[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=138)

# size significantly inferior to length at maturity or adult asymptotic length for female harbour porpoise (N=356)






   ### body mass and body length classes (proxy for age classes) distribution per sex and species:


ggplot(Strandings[!is.na(SEX) & ((SPECIES == "Delphinus delphis" & BODY_MASS %between% quantile(Strandings[!is.na(SEX) & SPECIES == "Delphinus delphis",BODY_MASS], c(0.025, 0.975), na.rm = T)) | (SPECIES == "Phocoena phocoena" & BODY_MASS %between% quantile(Strandings[!is.na(SEX) & SPECIES == "Phocoena phocoena" ,BODY_MASS], c(0.025, 0.975), na.rm = T)))], aes(x = BODY_MASS)) +
  geom_histogram (bins = 9, alpha = 0.5) + 
  facet_wrap(SEX~SPECIES, scales = "free_x") + 
    stat_summary(
        geom = "vline", linetype = "dashed", colour = "red",
        orientation = "y",
        # y is a required aesthetic, so use a dummy value
        aes(y = 1, xintercept = after_stat(x)),
        fun = function(x) {
            quantile(x, probs = c(0.25, 0.5, 0.75))
        }
    ) + ylab("Count") + xlab("Body mass (kg)") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) +
  ggtitle("Mass class distribution")

ggsave("Figure_S12A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



ggplot(Strandings[!is.na(SEX) & ((SPECIES == "Delphinus delphis" & BODY_LENGTH %between% quantile(Strandings[!is.na(SEX) & SPECIES == "Delphinus delphis",BODY_LENGTH], c(0.025, 0.975), na.rm = T)) | (SPECIES == "Phocoena phocoena" & BODY_LENGTH %between% quantile(Strandings[!is.na(SEX) & SPECIES == "Phocoena phocoena" ,BODY_LENGTH], c(0.025, 0.975), na.rm = T)))], aes(x = BODY_LENGTH)) +
  geom_histogram (bins = 9, alpha = 0.5) + 
  facet_wrap(SEX ~ SPECIES, scales = "free_x") + 
    stat_summary(
        geom = "vline", linetype = "dashed", colour = "red",
        orientation = "y",
        # y is a required aesthetic, so use a dummy value
        aes(y = 1, xintercept = after_stat(x)),
        fun = function(x) {
            quantile(x, probs = c(0.25, 0.5, 0.75))
        }
    ) +
  ylab("Count") + xlab("Body length (cm)") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) +
  ggtitle("Size class distribution")

ggsave("Figure_S12B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


# the edges of the distribution (2.5th quantile and 97.5th quantile) were discarded to avoid including outliers when comparing distributions




```






### Spatio-temporal patterns of sensitivity



```{r sensitivity stranding - spatio-temporal variations}



# Spatio-temporal variables description:


table(is.na(Strandings$TRIMESTER))
table(is.na(Strandings$YEAR))
table(is.na(Strandings$ICES_DIV))
# Very rare missing values for spatio-temporal variables



table(data_strandings_DEL$YEAR)
table(data_strandings_PHO$YEAR)

table(data_strandings_DEL$TRIMESTER)
table(data_strandings_PHO$TRIMESTER)

table(data_strandings_DEL$ICES_DIV)
table(data_strandings_PHO$ICES_DIV)

# some years appear quite rarely and the number of categories associated with the variable is high


### we grouped year (4-year periods, except for the last three years) to facilitate interpretations and avoid cases with too few data:

data_strandings_DEL[YEAR %in% 2000:2003, YEAR_group:= "2000-2003"]
data_strandings_DEL[YEAR %in% 2004:2007, YEAR_group:= "2004-2007"]
data_strandings_DEL[YEAR %in% 2008:2011, YEAR_group:= "2008-2011"]
data_strandings_DEL[YEAR %in% 2012:2015, YEAR_group:= "2012-2015"]
data_strandings_DEL[YEAR %in% 2016:2019, YEAR_group:= "2016-2019"]
data_strandings_DEL[YEAR %in% 2020:2022, YEAR_group:= "2020-2022"]

data_strandings_DEL[,YEAR_group:=as.factor(YEAR_group)]


data_strandings_PHO[YEAR %in% 2000:2003, YEAR_group:= "2000-2003"]
data_strandings_PHO[YEAR %in% 2004:2007, YEAR_group:= "2004-2007"]
data_strandings_PHO[YEAR %in% 2008:2011, YEAR_group:= "2008-2011"]
data_strandings_PHO[YEAR %in% 2012:2015, YEAR_group:= "2012-2015"]
data_strandings_PHO[YEAR %in% 2016:2019, YEAR_group:= "2016-2019"]
data_strandings_PHO[YEAR %in% 2020:2022, YEAR_group:= "2020-2022"]

data_strandings_PHO[,YEAR_group:=as.factor(YEAR_group)]





table(data_strandings_DEL$YEAR_group, data_strandings_DEL$ICES_DIV)
table(data_strandings_PHO$YEAR_group, data_strandings_PHO$ICES_DIV)

table(data_strandings_DEL$YEAR_group, data_strandings_DEL$TRIMESTER)
table(data_strandings_PHO$YEAR_group, data_strandings_PHO$TRIMESTER)

table(data_strandings_DEL$TRIMESTER, data_strandings_DEL$ICES_DIV)
table(data_strandings_PHO$TRIMESTER, data_strandings_PHO$ICES_DIV) #some combinations are rare, preventing the use of spatio-temporal interactions in models (potentially biased)







### Common dolphin:


  # Sex:


data_strandings_DEL[, SEX := as.factor(SEX)]
data_strandings_DEL[, TRIMESTER := as.factor(TRIMESTER)]
data_strandings_DEL[, ICES_DIV := as.factor(ICES_DIV)]



SPT_sensitivity_DEL_sex <- glm(data = data_strandings_DEL, SEX ~ YEAR_group + ICES_DIV + TRIMESTER, family = "binomial")

vif(SPT_sensitivity_DEL_sex)
summary(SPT_sensitivity_DEL_sex)
Anova(SPT_sensitivity_DEL_sex)

plot(ggemmeans(SPT_sensitivity_DEL_sex, terms = "TRIMESTER")) +
  ggtitle("Predicted probabilities of by-caught individual's sex\nper trimester") +
  ylab("By-caught individual's sex (probability)") +
  xlab("Trimester") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_2A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(SPT_sensitivity_DEL_sex, terms = "ICES_DIV")) +
  ggtitle("Predicted probabilities of by-caught individual's sex\nper ICES division") +
  ylab("By-caught individual's sex (probability)") +
  xlab("ICES division") + 
  theme(text = element_text(size = 30)) 

ggsave("Figure_2B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


pairs(emmeans(SPT_sensitivity_DEL_sex, "TRIMESTER"))

pairs(emmeans(SPT_sensitivity_DEL_sex, "ICES_DIV"))
# post-hoc pairwise comparison tests


simulateResiduals(fittedModel = SPT_sensitivity_DEL_sex, plot = T) 
plot(cooks.distance(SPT_sensitivity_DEL_sex) )  
# diagnostic plots of model: OK 



  # Size:


table(is.na(data_strandings_DEL$BODY_MASS))
# only model on size are performed because this measure is systematically performed for stranded individuals (contrary to weight, with too limited sample size: see the proportion of missing values above) and more reliable in our specific case (body mass values are guess estimations)

# Models on body size were performed for both sex separately to account for potential sex-specific spatio-temporal sensitivity profiles

    # Male:

SPT_sensitivity_DEL_sizeM <- lm(data = data_strandings_DEL[SEX == "Male"], BODY_LENGTH ~ YEAR_group + ICES_DIV + TRIMESTER)

vif(SPT_sensitivity_DEL_sizeM)
summary(SPT_sensitivity_DEL_sizeM)
Anova(SPT_sensitivity_DEL_sizeM)



plot(ggemmeans(SPT_sensitivity_DEL_sizeM, terms = "YEAR_group")) +
  ggtitle("Predicted body length of by-caught male\nper time period") +
  ylab("By-caught male's body length (cm)") + xlab("Time period (year interval)") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_2C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(SPT_sensitivity_DEL_sizeM, terms = "TRIMESTER")) +
  ggtitle("Predicted body length of by-caught male\nper trimester") +
  ylab("By-caught male's body length (cm)") + xlab("Trimester") +
  theme(text = element_text(size = 30))

ggsave("Figure_2D.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(SPT_sensitivity_DEL_sizeM, terms = "ICES_DIV")) +
  ggtitle("Predicted body length of by-caught male\nper ICES division") +
  ylab("By-caught male's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_2E.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



pairs(emmeans(SPT_sensitivity_DEL_sizeM, "YEAR_group"))

pairs(emmeans(SPT_sensitivity_DEL_sizeM, "TRIMESTER"))

pairs(emmeans(SPT_sensitivity_DEL_sizeM, "ICES_DIV"))
# post-hoc pairwise comparison tests


plot(SPT_sensitivity_DEL_sizeM)
plot(cooks.distance(SPT_sensitivity_DEL_sizeM))
simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_DEL_sizeM, plot = T) 
# Diagnostic plots revealed deviations from statistical assumptions




hist(data_strandings_DEL[SEX == "Male"]$BODY_LENGTH) # negatively skewed distribution (same for residuals)
hist(data_strandings_DEL[SEX == "Male"]$BODY_LENGTH^3) # way better after cubic transformation

SPT_sensitivity_DEL_sizeM_cubed <- lm(data = data_strandings_DEL[SEX== "Male"], I(BODY_LENGTH^3) ~ YEAR_group + ICES_DIV + TRIMESTER)

summary(SPT_sensitivity_DEL_sizeM_cubed)
Anova(SPT_sensitivity_DEL_sizeM_cubed)


plot(ggemmeans(SPT_sensitivity_DEL_sizeM_cubed, terms = "YEAR_group")) +
  ggtitle("Predicted body length of by-caught male\nper time period") +
  ylab("By-caught male's body length (cm)") + xlab("Time period (year interval)") +
  theme(text = element_text(size = 30)) 
plot(ggemmeans(SPT_sensitivity_DEL_sizeM_cubed, terms = "TRIMESTER")) +
  ggtitle("Predicted body length of by-caught male\nper trimester") +
  ylab("By-caught male's body length (cm)") +
  theme(text = element_text(size = 30))
plot(ggemmeans(SPT_sensitivity_DEL_sizeM_cubed, terms = "ICES_DIV")) +
  ggtitle("Predicted body length of by-caught male\nper ICES division") +
  ylab("By-caught male's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

# output nearly identical than before transforming data



simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_DEL_sizeM_cubed, plot = T)
# good model diagnostic plots (still significant deviation for first quantile, but reasonable and combined adjusted quantile NS)






    # Females:



SPT_sensitivity_DEL_sizeF <- lm(data = data_strandings_DEL[SEX == "Female"], BODY_LENGTH ~ YEAR_group + ICES_DIV + TRIMESTER)

vif(SPT_sensitivity_DEL_sizeF)
summary(SPT_sensitivity_DEL_sizeF)
Anova(SPT_sensitivity_DEL_sizeF) 


plot(ggemmeans(SPT_sensitivity_DEL_sizeF, terms = "ICES_DIV")) + 
  ggtitle("Predicted body length of by-caught female\nper ICES division") +
  ylab("By-caught female's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_2F.pdf", device = "pdf", units = "in", width = 14, height = 8.5) 



pairs(emmeans(SPT_sensitivity_DEL_sizeF, "ICES_DIV"))
# post-hoc pairwise comparison tests



plot(SPT_sensitivity_DEL_sizeF)
plot(cooks.distance(SPT_sensitivity_DEL_sizeF))
simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_DEL_sizeF, plot = T) 
# Diagnostic plots revealed deviations from statistical assumptions



hist(data_strandings_DEL[SEX == "Female"]$BODY_LENGTH) #negatively skewed distribution (same for residuals)
hist(data_strandings_DEL[SEX == "Female"]$BODY_LENGTH^3) #way better after cubic transformation


SPT_sensitivity_DEL_sizeF_cubed <- lm(data = data_strandings_DEL[SEX== "Female"], I(BODY_LENGTH^3) ~ YEAR_group + ICES_DIV + TRIMESTER)

summary(SPT_sensitivity_DEL_sizeF_cubed)
Anova(SPT_sensitivity_DEL_sizeF_cubed) 


plot(ggemmeans(SPT_sensitivity_DEL_sizeF_cubed, terms = "ICES_DIV")) + 
  ggtitle("Predicted body length of by-caught female\nper ICES division") +
  ylab("By-caught female's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

# output nearly identical than before transforming data



simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_DEL_sizeF_cubed, plot = T)
# good model diagnostic plots







### Harbour porpoise:


  # Sex:


data_strandings_PHO[, SEX := as.factor(SEX)]
data_strandings_PHO[, TRIMESTER := as.factor(TRIMESTER)]
data_strandings_PHO[, ICES_DIV := as.factor(ICES_DIV)]



SPT_sensitivity_PHO_sex <- glm(data = data_strandings_PHO, SEX ~ YEAR_group + ICES_DIV + TRIMESTER, family = "binomial")

vif(SPT_sensitivity_PHO_sex)
summary(SPT_sensitivity_PHO_sex)
Anova(SPT_sensitivity_PHO_sex)


plot(ggemmeans(SPT_sensitivity_PHO_sex, terms = "ICES_DIV"))  +
  ggtitle("Predicted probabilities of by-caught individual's sex\nper ICES division") +
  ylab("By-caught individual's sex (probability)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_3A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


pairs(emmeans(SPT_sensitivity_PHO_sex, "ICES_DIV"))
# post-hoc pairwise comparison tests



simulateResiduals(fittedModel = SPT_sensitivity_PHO_sex, plot = T) 
plot(cooks.distance(SPT_sensitivity_PHO_sex) ) 
# diagnostic plot of models: OK 






  # Size:


table(is.na(data_strandings_PHO$BODY_MASS))
# only model on size are performed because this measure is systematically performed for stranded individuals (contrary to weight, with too limited sample size: see the proportion of missing values above) and more reliable in our specific case (body mass values are guess estimations)

# Models on body size were performed for both sex separately to account for potential sex-specific spatio-temporal sensitivity profiles

    # Males:



SPT_sensitivity_PHO_sizeM <- lm(data = data_strandings_PHO[SEX == "Male"], BODY_LENGTH ~ YEAR_group + ICES_DIV + TRIMESTER)

vif(SPT_sensitivity_PHO_sizeM)
summary(SPT_sensitivity_PHO_sizeM)
Anova(SPT_sensitivity_PHO_sizeM) 

plot(ggemmeans(SPT_sensitivity_PHO_sizeM, terms = "TRIMESTER"))  +
  ggtitle("Predicted body length of by-caught male\nper trimester") +
  ylab("By-caught male's body length (cm)") +  xlab("Trimester") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_3B.pdf", device = "pdf", units = "in", width = 14, height = 8.5) 


plot(ggemmeans(SPT_sensitivity_PHO_sizeM, terms = "ICES_DIV"))  + 
  ggtitle("Predicted body length of by-caught male\nper ICES division") +
  ylab("By-caught male's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

ggsave("Figure_3C.pdf", device = "pdf", units = "in", width = 14, height = 8.5) 



pairs(emmeans(SPT_sensitivity_PHO_sex, "TRIMESTER"))
pairs(emmeans(SPT_sensitivity_PHO_sex, "ICES_DIV"))
# post-hoc pairwise comparison tests



plot(SPT_sensitivity_PHO_sizeM)
cooks.distance(SPT_sensitivity_PHO_sizeM)
simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_PHO_sizeM, plot = T) 


# Diagnostic plot nearly ok, with small deviation for third quantile

hist(data_strandings_PHO[SEX == "Male"]$BODY_LENGTH) # small positive skewness
hist(sqrt(data_strandings_PHO[SEX == "Male"]$BODY_LENGTH)) # way better after squared root transformation






SPT_sensitivity_PHO_sizeM_sqrt <- lm(data = data_strandings_PHO[SEX == "Male"], sqrt(BODY_LENGTH) ~ YEAR_group + ICES_DIV + TRIMESTER)

summary(SPT_sensitivity_PHO_sizeM_sqrt)
Anova(SPT_sensitivity_PHO_sizeM_sqrt) 

plot(ggemmeans(SPT_sensitivity_PHO_sizeM_sqrt, terms = "TRIMESTER"))  +
  ggtitle("Predicted body length of by-caught male\nper trimester") +
  ylab("By-caught male's body length (cm)") +
  theme(text = element_text(size = 30)) 
plot(ggemmeans(SPT_sensitivity_PHO_sizeM_sqrt, terms = "ICES_DIV"))  +
  ggtitle("Predicted body length of by-caught male\nperICES division") + 
  ylab("By-caught male's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30)) 

# output nearly identical than before transforming data


simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_PHO_sizeM, plot = T) 
#diagnostic plots of model: OK (except for a small deviation of the third quantile)






    # Females:



SPT_sensitivity_PHO_sizeF <- lm(data = data_strandings_PHO[SEX == "Female"], BODY_LENGTH ~ YEAR_group + ICES_DIV + TRIMESTER)

vif(SPT_sensitivity_PHO_sizeF)
summary(SPT_sensitivity_PHO_sizeF)
Anova(SPT_sensitivity_PHO_sizeF) 


plot(ggemmeans(SPT_sensitivity_PHO_sizeF, terms = "ICES_DIV"))  +
  ggtitle("Predicted body length of by-caught female\nper ICES division") +
  ylab("By-caught female's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30))  

ggsave("Figure_3D.pdf", device = "pdf", units = "in", width = 14, height = 8.5) 


plot(ggemmeans(SPT_sensitivity_PHO_sizeF, terms = "YEAR_group")) +
  ggtitle("Predicted body length of by-caught female\nper time period") +
  ylab("By-caught female's body length (cm)") + xlab("Time period (year interval)") +
  theme(text = element_text(size = 30))

ggsave("Figure_3E.pdf", device = "pdf", units = "in", width = 14, height = 8.5) 




pairs(emmeans(SPT_sensitivity_PHO_sizeF, "YEAR_group"))
pairs(emmeans(SPT_sensitivity_PHO_sizeF, "ICES_DIV"))
# post-hoc pairwise comparison tests





plot(SPT_sensitivity_PHO_sizeF)
cooks.distance(SPT_sensitivity_PHO_sizeF)
simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_PHO_sizeF, plot = T) 
# Model diagnostic plot nearly ok, with small deviation for normal distribution




hist(data_strandings_PHO[SEX == "Female"]$BODY_LENGTH) # small positive skewness of distribution
hist(sqrt(data_strandings_PHO[SEX == "Female"]$BODY_LENGTH)) # way better after squared root transformation


SPT_sensitivity_PHO_sizeF_sqrt <- lm(data = data_strandings_PHO[SEX == "Female"], sqrt(BODY_LENGTH) ~ YEAR_group + ICES_DIV + TRIMESTER)

summary(SPT_sensitivity_PHO_sizeF_sqrt)
Anova(SPT_sensitivity_PHO_sizeF_sqrt) 


plot(ggemmeans(SPT_sensitivity_PHO_sizeF, terms = "ICES_DIV"))  +
  ggtitle("Predicted body length of by-caught female\nper ICES division") +
  ylab("By-caught female's body length (cm)") + xlab("ICES division") +
  theme(text = element_text(size = 30))    
plot(ggemmeans(SPT_sensitivity_PHO_sizeF, terms = "YEAR_group")) +
  ggtitle("Predicted body length of by-caught female\nper time period") +
  ylab("By-caught female's body length (cm)") + xlab("Time period (year interval)") +
  theme(text = element_text(size = 30)) 



# output nearly identical than before transforming data


simulationOutput <- simulateResiduals(fittedModel = SPT_sensitivity_PHO_sizeF_sqrt, plot = T) 
# diagnostic plots of model: OK


```




#### Output statististic tables (spatio-temporal regressions)



```{r sensitivity stranding - spatio-temporal variations Tables}

### Table (S2) combining all models' analysis of deviance (type II) statistics:


TableS2 = cbind(Anova(SPT_sensitivity_DEL_sex), Anova(SPT_sensitivity_DEL_sizeM)[-4,-1], Anova(SPT_sensitivity_DEL_sizeM_cubed)[-4,-1], Anova(SPT_sensitivity_DEL_sizeF)[-4,-1], Anova(SPT_sensitivity_DEL_sizeF_cubed)[-4,-1], Anova(SPT_sensitivity_PHO_sex), Anova(SPT_sensitivity_PHO_sizeM)[-4,-1], Anova(SPT_sensitivity_PHO_sizeM_sqrt)[-4,-1], Anova(SPT_sensitivity_PHO_sizeF)[-4,-1], Anova(SPT_sensitivity_PHO_sizeF_sqrt)[-4,-1])

TableS2 = TableS2[, c(2,1,3,5,6,8,9,11,12,14,15,16,18,20,21,23,24,26,27,29,30)] # reordering statistics values in the same order (and removing duplicated columns)

TableS2 = cbind(rownames(TableS2), TableS2[,1], mapply(function(x, y) paste0(signif(x, digits = 3), " (", signif(y, digits = 3), ")"), TableS2[, seq(2, 21, 2)], TableS2[, seq(3, 21, 2)])) # combining statistics on a same line

TableS2 = cbind(TableS2[, 1:3], paste0(TableS2[, 4], " / ", TableS2[, 5]), paste0(TableS2[, 6], " / ", TableS2[, 7]), TableS2[, 8], paste0(TableS2[, 9], " / ", TableS2[, 10]), paste0(TableS2[, 11], " / ", TableS2[, 12])) #combining model before/after transformations on the same line


colnames(TableS2) = c("", "Df", "LR Chisq (P-value)", rep("F Value (P-value)", 2), "LR Chisq (P-value)", rep("F Value (P-value)", 2))

TableS2[, 1] = c("Time period (year interval)", "ICES division", "Trimester")


TableS2 = rbind(TableS2, c("Number of observations", "", SPT_sensitivity_DEL_sex$df.null, SPT_sensitivity_DEL_sizeM$df.residual+11, SPT_sensitivity_DEL_sizeF$df.residual+11, SPT_sensitivity_PHO_sex$df.null, SPT_sensitivity_PHO_sizeM$df.residual+11, SPT_sensitivity_PHO_sizeF$df.residual+11)) # adding a line containing sample size for each model

TableS2 = rbind(TableS2, c("R-squared", "", signif(rsq.n(SPT_sensitivity_DEL_sex), digits = 3), paste0(signif(summary(SPT_sensitivity_DEL_sizeM)$r.squared, digits = 3), " / ", signif(summary(SPT_sensitivity_DEL_sizeM_cubed)$r.squared, digits = 3)), paste0(signif(summary(SPT_sensitivity_DEL_sizeF)$r.squared, digits = 3), " / ", signif(summary(SPT_sensitivity_DEL_sizeF_cubed)$r.squared, digits = 3)), signif(rsq.n(SPT_sensitivity_PHO_sex), digits = 3), paste0(signif(summary(SPT_sensitivity_PHO_sizeM)$r.squared, digits = 3), " / ", signif(summary(SPT_sensitivity_PHO_sizeM_sqrt)$r.squared, digits = 3)), paste0(signif(summary(SPT_sensitivity_PHO_sizeF)$r.squared, digits = 3), " / ", signif(summary(SPT_sensitivity_PHO_sizeF_sqrt)$r.squared, digits = 3)))) # adding a line containing R-squared values for each model


TableS2 = rbind(colnames(TableS2), TableS2)

colnames(TableS2) = c("", "", "Sex (logistic regression)", "Males size (linear regression)", "Females size (linear regression)", "Sex (logistic regression)", "Males size (linear regression)", "Females size (linear regression)")


kable_classic(add_header_above(kbl(TableS2, format = "latex", vline= ""), c("", "", "Delphinus delphis" = 3 , "Phocoena phocoena" = 3)))
# Latex format for exporting the table







### Table combining pairwise contrast comparison tests for each significant variable either in models studying sex distribution (S3) or size distribution (S4):


TableS3 = rbind( 
  cbind(Species = "Delphinus delphis", Variable = "Trimester", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sex, "TRIMESTER"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sex, "TRIMESTER")))$p.value),
  cbind(Species = "Delphinus delphis", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sex, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sex, "ICES_DIV")))$p.value),
  cbind(Species = "Phocoena phocoena", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sex, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sex, "ICES_DIV")))$p.value)
  ) # statistics of pairwise comparison tests for all models on sex (with and without correction for multiple testing)


TableS3$df = NULL

TableS3[sapply(TableS3, is.numeric)] = lapply(TableS3[sapply(TableS3, is.numeric)], round, 3) # round all results to three decimal places


TableS3 = TableS3[TableS3$p.value < 0.05, ] # keeping only significant pairwise comparison tests

rownames(TableS3) = NULL

 kable_classic(collapse_rows(kbl(TableS3, format = "latex"), columns = 1:2, target = 1, valign = "middle"))
# Latex format for exporting the table





TableS4 = rbind( 
  cbind(Species = "Delphinus delphis", Sex = "Male", Variable = "Year interval", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "YEAR_group"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "YEAR_group")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM_cubed, "YEAR_group")))$p.value),
  cbind(Species = "Delphinus delphis", Sex = "Male", Variable = "Trimester", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "TRIMESTER"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "TRIMESTER")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM_cubed, "TRIMESTER")))$p.value),
  cbind(Species = "Delphinus delphis", Sex = "Male", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM, "ICES_DIV")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeM_cubed, "ICES_DIV")))$p.value),
  cbind(Species = "Delphinus delphis", Sex = "Female", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeF, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeF, "ICES_DIV")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_DEL_sizeF_cubed, "ICES_DIV")))$p.value),  
  cbind(Species = "Phocoena phocoena", Sex = "Male", Variable = "Trimester", as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM, "TRIMESTER"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM, "TRIMESTER")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM_sqrt, "TRIMESTER")))$p.value),
  cbind(Species = "Phocoena phocoena", Sex = "Male", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM, "ICES_DIV")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeM_sqrt, "ICES_DIV")))$p.value),
  cbind(Species = "Phocoena phocoena", Sex = "Female", Variable = "Year interval", as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF, "YEAR_group"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF, "YEAR_group")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF_sqrt, "YEAR_group")))$p.value),
  cbind(Species = "Phocoena phocoena", Sex = "Female", Variable = "ICES division", as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF, "ICES_DIV"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF, "ICES_DIV")))$p.value, adj.p.value_transf = as.data.frame(pairs(emmeans(SPT_sensitivity_PHO_sizeF_sqrt, "ICES_DIV")))$p.value)
) # statistics of pairwise comparison tests for all models on size (with and without correction for multiple testing)
  
  


TableS4$df = NULL

TableS4[sapply(TableS4, is.numeric)] = lapply(TableS4[sapply(TableS4, is.numeric)], round, 3) # round all results to three decimal places


TableS4=TableS4[TableS4$p.value < 0.05, ]  # keeping only significant pairwise comparison tests

rownames(TableS4) = NULL

 kable_classic(collapse_rows(kbl(TableS4, format = "latex"), columns = 1:3, target = 1, valign = "middle"))
# Latex format for exporting the table


```



## Observation and declaration data

### Distribution of traits and comparisons with key population values

```{r sensitivity observation and declaration- distribution comparison}



# sex-ratio of recorded incidental captures:




ggplot(dcast(na.omit(OBSMER_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"), .(SEX, SPECIES)]), SEX + SPECIES ~ ., fun.aggregate = length), aes( x = SPECIES, y = .)) +
  geom_bar(aes(fill = SEX), stat = "identity", position = "dodge")  +
  ggtitle("Sex distribution of captures") +
  labs(x = "Captured species", y = "Number of individuals", fill = "Sex") + 
  scale_fill_grey() +  theme(text = element_text(size = 30))



binom.test(table(OBSMER_Bycatch[, .(SEX, SPECIES)][SPECIES == "Delphinus delphis"][,SEX]))

binom.test(table(OBSMER_Bycatch[, .(SEX, SPECIES)][SPECIES == "Phocoena phocoena"][,SEX]))






########## Combined figure with both strandings and recorded captures data:


ggplot(dcast(na.omit(rbind(OBSMER_Bycatch[!is.na(SEX) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"), .(SEX, SPECIES, "Declared/observed\nby-catches")], Strandings[!is.na(SEX), .(SEX, SPECIES, "Strandings")])), SEX + SPECIES + V3 ~ ., fun.aggregate = length), aes( x =V3, y = .)) +
  geom_bar(aes(fill = SEX), stat = "identity", position = "dodge") + 
  facet_wrap(~ SPECIES, scales = "free_y") +
  ggtitle("Sex distribution of by-catches/strandings") + 
  labs(x = "Species and data sources", y = "Number of individuals", fill = "Sex") + 
  scale_fill_grey() +  theme(text = element_text(size = 30), strip.text = element_text(face = "italic")) +  theme(axis.text.x = element_text(angle = 55, hjust = 1)) 


ggsave("Figure_1A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)








# body mass distribution of recorded incidental captures:

ggplot(Decl_Obs_Merged_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"), .(BODY_MASS, SPECIES)], aes( x = SPECIES, y = BODY_MASS)) +
  geom_violin() + geom_boxplot(width = 0.1) + 
  ggtitle("Body mass of captured individuals") +  
  labs(x = "Species", y = "Body mass (kg)") +
  theme(text = element_text(size = 30))



    ### by sex:

ggplot(OBSMER_Bycatch[!is.na(SEX) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"), .(BODY_MASS, paste0(SPECIES, " (", SEX, ")"))], aes( x = V2, y = BODY_MASS)) + 
  geom_violin() + geom_boxplot(width = 0.1) +
  ggtitle("Body mass of captured individuals") +  
  labs(x = "Species", y = "Body mass (kg)") +
  theme(text = element_text(size = 30))





########## Combined figure with both strandings and recorded captures data:

ggplot(rbind(Decl_Obs_Merged_Bycatch[SPECIES %in% c("Delphinus delphis", "Phocoena phocoena"), .(BODY_MASS, SPECIES, "Declared/observed\nby-catches")], Strandings[!is.na(SEX), .(BODY_MASS, SPECIES, paste0("Strandings,\n", SEX))]), aes( x = V3, y = BODY_MASS)) +
  geom_violin() + geom_boxplot(width = 0.1) +  
  ggtitle("Body mass of by-caught/stranded individuals") + 
  labs(x = "Species, data sources and sex", y = "Body mass (kg)") + 
  theme(text = element_text(size = 30), strip.text = element_text(face = "italic")) +  theme(axis.text.x = element_text(angle = 55, hjust = 1))  +
  facet_wrap(~ SPECIES)

ggsave("Figure_1B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)








# body length distribution of recorded incidental captures:




biblio = data.frame(ref = c("Murphy et al. 2021", "Murphy et al. 2021", "Murphy and Rogan 2006", "Murphy and Rogan 2006", "Perrin and Reilly 1984", "Perrin and Reilly 1984", "Murphy et al. 2013", "Murphy et al. 2013","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003","Loycker et al. 2003"),
                    param = c("Sexual maturity<br>(males, *Delphinus delphis*)", "Sexual maturity<br>(females, *Delphinus delphis*)", "Asymptotic length<br>(males, *Delphinus delphis*)", "Asymptotic length<br>(females, *Delphinus delphis*)", "Sexual maturity<br>(males, *Delphinus delphis*)", "Sexual maturity<br>(females, *Delphinus delphis*)", "Asymptotic length<br>(males, *Delphinus delphis*)", "Asymptotic length<br>(females, *Delphinus delphis*)","Sexual maturity<br>(males, *Phocoena phocoena*)", "Sexual maturity<br>(females, *Phocoena phocoena*)", "Asymptotic length<br>(males, *Phocoena phocoena*)", "Asymptotic length<br>(females, *Phocoena phocoena*)", "Sexual maturity<br>(males, *Phocoena phocoena*)", "Sexual maturity<br>(females, *Phocoena phocoena*)", "Asymptotic length<br>(males, *Phocoena phocoena*)", "Asymptotic length<br>(females, *Phocoena phocoena*)"), 
                    VALEUR = c(206, 188, 211, 197, 200, 190, 209, 206, 127, 138, 141, 153, 135, 147, 149, 163))






ggplot(OBSMER_Bycatch[, .(paste0("*", SPECIES, "*", " (", SEX, ")"), BODY_LENGTH)], aes( x = V1, y = BODY_LENGTH)) + 
  geom_violin(width = 1) + geom_boxplot(width = 0.1) + geom_point(data = biblio, mapping = aes(x = param, y = VALEUR, shape = ref), size = 2) + 
  ggtitle("Body length of stranded individuals\n(compared with literature life-history traits)") + 
  labs(x = "Species, sex and literature estimates", y = "Body length (cm)", shape= "Bibliographic\nreferences") +
  theme(text = element_text(size = 15))  +  theme(axis.text.x = element_text(angle = 60, hjust = 1))  +
  scale_x_discrete(limits = c("*Delphinus delphis* (Female)","Sexual maturity<br>(females, *Delphinus delphis*)","Asymptotic length<br>(females, *Delphinus delphis*)","*Delphinus delphis* (Male)","Sexual maturity<br>(males, *Delphinus delphis*)","Asymptotic length<br>(males, *Delphinus delphis*)", "*Phocoena phocoena* (Female)","Sexual maturity<br>(females, *Phocoena phocoena*)","Asymptotic length<br>(females, *Phocoena phocoena*)","*Phocoena phocoena* (Male)","Sexual maturity<br>(males, *Phocoena phocoena*)","Asymptotic length<br>(males, *Phocoena phocoena*)"))  +
    theme(axis.text = element_markdown())




########## Combined figure with both strandings and recorded captures data:



ggplot(rbind(OBSMER_Bycatch[, .(paste0("*", SPECIES, "*", ", ", SEX, "<br>Declared/observed by-catches"), BODY_LENGTH)], Strandings[, .(paste0("*", SPECIES, "*", ", ", SEX, "<br>Strandings"), BODY_LENGTH)]), aes( x = V1, y = BODY_LENGTH)) + 
  geom_violin(width = 1) + geom_boxplot(width = 0.1) + geom_point(data=biblio, mapping=aes(x = param, y = VALEUR, shape=ref), size=2) + 
  ggtitle("Body length of by-caught/stranded individuals\n(compared with literature life-history traits)") +
  labs(x = "Species, sex, data sources and literature estimates", y = "Body length (cm)", shape= "Bibliographic references") +  
  theme(text = element_text(size = 15))  +  theme(axis.text.x = element_text(angle = 60, hjust = 1))  + 
  scale_x_discrete(limits = c("*Delphinus delphis*, Female<br>Strandings","*Delphinus delphis*, Female<br>Declared/observed by-catches","Sexual maturity<br>(females, *Delphinus delphis*)","Asymptotic length<br>(females, *Delphinus delphis*)","*Delphinus delphis*, Male<br>Strandings","*Delphinus delphis*, Male<br>Declared/observed by-catches","Sexual maturity<br>(males, *Delphinus delphis*)","Asymptotic length<br>(males, *Delphinus delphis*)", "*Phocoena phocoena*, Female<br>Strandings","*Phocoena phocoena*, Female<br>Declared/observed by-catches","Sexual maturity<br>(females, *Phocoena phocoena*)","Asymptotic length<br>(females, *Phocoena phocoena*)","*Phocoena phocoena*, Male<br>Strandings","*Phocoena phocoena*, Male<br>Declared/observed by-catches","Sexual maturity<br>(males, *Phocoena phocoena*)","Asymptotic length<br>(males, *Phocoena phocoena*)")) +
    theme(axis.text = element_markdown())


ggsave("Figure_1C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)




wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=211)
wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=209)

wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=206)
wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Male", BODY_LENGTH],mu=200)

# size significantly inferior to length at maturity and asymptotic length for male common dolphin (N=79)


wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=206)
wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=197)

wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=190)
wilcox.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & SEX== "Female", BODY_LENGTH],mu=188)

# size significantly inferior to length at maturity and asymptotic length for female common dolphin (N=79)




wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=149)
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=141)

wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=135)
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Male", BODY_LENGTH],mu=127)

# size significantly superior to length at maturity  for male harbour porpoise (N=18)


wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=163)
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=153)

wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=147)
wilcox.test(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & SEX== "Female", BODY_LENGTH],mu=138)
# no significant differences (N=13)





   ### body length classes (proxy for age classes) distribution per sex and species:



ggplot(OBSMER_Bycatch[!is.na(SEX) & ((SPECIES == "Delphinus delphis" & BODY_LENGTH %between% quantile(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis", BODY_LENGTH], c(0.025, 0.975), na.rm = T)) | (SPECIES == "Phocoena phocoena" & BODY_LENGTH %between% quantile(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena" ,BODY_LENGTH], c(0.025, 0.975), na.rm = T)))], aes(x = BODY_LENGTH)) + geom_histogram (bins = 5, alpha = 0.5) + facet_wrap(SEX~SPECIES, scales = "free_x") + 
    stat_summary(
        geom = "vline", linetype = "dashed", colour = "red", 
        orientation = "y",
        # y is a required aesthetic, so use a dummy value
        aes(y = 1, xintercept = after_stat(x)),
        fun = function(x) {
            quantile(x, probs = c(0.25, 0.5, 0.75))
        }
    ) + ylab("Count") + xlab("Body length (cm)") +
  theme(text = element_text(size = 20), strip.text = element_text(face = "italic")) +
  ggtitle("Size class distribution")


ggsave("Figure_S13.pdf", device = "pdf", units = "in", width = 14, height = 8.5)

# we have not produced the same graph for body mass classes because the declaration data do not record sex, so the sample size with only observations is too small to produce such a graph



```






### Spatio-temporal patterns of sensitivity



```{r sensitivity observation and declaration - spatio-temporal variations}




# Spatio-temporal variables description:


anyNA(OBSMER_Bycatch$TRIMESTER)
anyNA(OBSMER_Bycatch$YEAR)
anyNA(OBSMER_Bycatch$ICES_DIV)

anyNA(Decl_Obs_Merged_Bycatch$TRIMESTER)
anyNA(Decl_Obs_Merged_Bycatch$YEAR)
anyNA(Decl_Obs_Merged_Bycatch$ICES_DIV)
# No missing values for spatio-temporal variables



table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)
table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)



table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV)
table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV)


# The distribution of the number of captures per ICES division is highly variable, with some underrepresented divisions. Due to rare categories and the fact that the sample size of recorded captures is too small to support analyses with categorical variables described by a high number of classes, we decided to group ICES divisions into four different groups.


table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$YEAR)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR)
table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR)


# The distribution of the number of captures per year is highly variable, with some underrepresented years, and differs greatly between common dolphins and harbour porpoises. Due to rare categories and the fact that the sample size of recorded captures is too small to support analyses with categorical variables described by a high number of classes, we decided to group years into four different groups. We used different groupings for each species to better account for temporal differences in the distribution of captures.




OBSMER_Bycatch$ICES_DIV_grouped=OBSMER_Bycatch$ICES_DIV
OBSMER_Bycatch[ICES_DIV %in% c("27.4.c", "27.7.e", "27.7.d"), ICES_DIV_grouped:= "27.7.de/4.c"]
OBSMER_Bycatch[ICES_DIV %in% c("27.7.f", "27.7.g", "27.7.h","27.7.j","27.7.k"), ICES_DIV_grouped:= "27.7.fghjk"]
OBSMER_Bycatch[ICES_DIV %in% c("27.8.a", "27.8.d"), ICES_DIV_grouped:= "27.8.ad"]
OBSMER_Bycatch[ICES_DIV %in% c("27.8.b", "27.8.c"), ICES_DIV_grouped:= "27.8.bc"]


Decl_Obs_Merged_Bycatch$ICES_DIV_grouped=Decl_Obs_Merged_Bycatch$ICES_DIV
Decl_Obs_Merged_Bycatch[ICES_DIV %in% c("27.4.c", "27.7.e", "27.7.d"), ICES_DIV_grouped:= "27.7.de/4.c"]
Decl_Obs_Merged_Bycatch[ICES_DIV %in% c("27.7.f", "27.7.g", "27.7.h","27.7.j","27.7.k"), ICES_DIV_grouped:= "27.7.fghjk"]
Decl_Obs_Merged_Bycatch[ICES_DIV %in% c("27.8.a", "27.8.d"), ICES_DIV_grouped:= "27.8.ad"]
Decl_Obs_Merged_Bycatch[ICES_DIV %in% c("27.8.b", "27.8.c"), ICES_DIV_grouped:= "27.8.bc"]




OBSMER_Bycatch$YEAR = as.character(OBSMER_Bycatch$YEAR)

OBSMER_Bycatch$YEAR_DCO=OBSMER_Bycatch$YEAR

OBSMER_Bycatch[YEAR %in% c("2005", "2007", "2008", "2009", "2010","2011", "2012"), YEAR_DCO:= "2005-2012"]
OBSMER_Bycatch[YEAR %in% c("2013", "2014", "2015", "2016"), YEAR_DCO:= "2013-2016"]
OBSMER_Bycatch[YEAR %in% c("2017", "2018", "2019", "2020"), YEAR_DCO:= "2017-2020"]
OBSMER_Bycatch[YEAR %in% c("2021", "2022","2023"), YEAR_DCO:= "2021-2023"]


OBSMER_Bycatch$YEAR_PHO=OBSMER_Bycatch$YEAR

OBSMER_Bycatch[YEAR %in% c("2005", "2007", "2008", "2009", "2010"), YEAR_PHO:= "2005-2010"]
OBSMER_Bycatch[YEAR %in% c("2011", "2012", "2013", "2014"), YEAR_PHO:= "2011-2014"]
OBSMER_Bycatch[YEAR %in% c("2015", "2016", "2017", "2018"), YEAR_PHO:= "2015-2018"]
OBSMER_Bycatch[YEAR %in% c("2019", "2020", "2021", "2022","2023"), YEAR_PHO:= "2019-2023"]




Decl_Obs_Merged_Bycatch$YEAR = as.character(Decl_Obs_Merged_Bycatch$YEAR)

Decl_Obs_Merged_Bycatch$YEAR_DCO=Decl_Obs_Merged_Bycatch$YEAR

Decl_Obs_Merged_Bycatch[YEAR %in% c("2005", "2007", "2008", "2009", "2010","2011", "2012"), YEAR_DCO:= "2005-2012"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2013", "2014", "2015", "2016"), YEAR_DCO:= "2013-2016"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2017", "2018", "2019", "2020"), YEAR_DCO:= "2017-2020"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2021", "2022","2023"), YEAR_DCO:= "2021-2023"]


Decl_Obs_Merged_Bycatch$YEAR_PHO=Decl_Obs_Merged_Bycatch$YEAR

Decl_Obs_Merged_Bycatch[YEAR %in% c("2005", "2007", "2008", "2009", "2010"), YEAR_PHO:= "2005-2010"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2011", "2012", "2013", "2014"), YEAR_PHO:= "2011-2014"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2015", "2016", "2017", "2018"), YEAR_PHO:= "2015-2018"]
Decl_Obs_Merged_Bycatch[YEAR %in% c("2019", "2020", "2021", "2022","2023"), YEAR_PHO:= "2019-2023"]







table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)


table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_PHO)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)
table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_PHO)

# These groupings minimise the variance between sample sizes per group without creating groups with too few catches (N<6) and keeping consistent homogeneity (consecutive years and adjacent divisions with no major discontinuity). 










# Exploration of sample size per analyses


table(OBSMER_Bycatch[!is.na(SEX) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$SPECIES)
table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$SPECIES)
table(Decl_Obs_Merged_Bycatch[!is.na(BODY_MASS) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$SPECIES)

table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$SPECIES, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES %in% c("Delphinus delphis", "Phocoena phocoena")]$SEX)

# Spatio-temporal variables used for models are composed of four categories each, regression models (see stranding analyses for details) parameters are then associated with ten degrees of freedom. If we consider that each explanatory parameter should be associated at least to 10 points of data to avoid over-parametrized models, we need at least 100 data points per model. This is not the case for all the analyses of recorded harbour porpoise captures, but also for all the models on body length of captured individuals by species and sex.

# To avoid over-parametrized models and harmonize analyses we only performed exploratory analyses on recorded captures using non parametric tests: Fisher tests for sex analyses and Kruskal-Wallis tests for body mass and length analyses, without considering sex separately for the latter analyses and with pairwise comparison tests if significant (respectively Fisher and Wilcoxon test)




# Common dolphin:


  # Sex:



table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped) # more female captured north of the bay of Biscay (not significant)


ggplot(dcast(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"], SEX + ICES_DIV_grouped ~ ., fun.aggregate = length), aes( x = ICES_DIV_grouped, y = .)) +
  geom_bar(aes(fill = SEX), stat = "identity", position = "dodge") + ggtitle("Common dolphin - Sex model - OBSMER dataset") +  labs(x = "Area (ICES divisions groups)", y = "Number of captured individuals", fill = "Sex") + scale_fill_grey(label = c("Female", "Male")) +  theme(text = element_text(size = 30))  + scale_y_continuous(limits = c(0, 41))

ggsave("Figure_S15.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


fisher.test(table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$YEAR_DCO, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped), simulate.p.value = T) #strong correlation making interpretation difficult





table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$YEAR_DCO)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$YEAR_DCO)



table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$TRIMESTER)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis"]$TRIMESTER) 






  # weight:



# Prior to spatio-temporal tests we checked whether body mass variation depended on the data sources:

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ORIGIN)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ORIGIN)



table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)



table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)

boxplot(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO) #larger individuals during recent years, particularly between 2017 and 2023

ggplot(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_MASS)], aes(BODY_MASS, YEAR_DCO)) + geom_violin() + geom_boxplot(width = 0.1) +  stat_compare_means(label = "p.format", comparisons = list(c("2017-2020", "2013-2016"), c("2021-2023", "2013-2016")), size=9) + ggtitle("Delphinus delphis - BM model - Merged datasets") +  labs(y = "Time period (years)", x = "Captured individuals' body mass (kg)") +  theme(text = element_text(size = 30))


ggsave("Figure_S14A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


fisher.test(table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO, Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped), simulate.p.value = T) #strong correlation making interpretation difficult




table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)





  # size:





table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)


table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$YEAR_DCO)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$YEAR_DCO) 




table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$TRIMESTER)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$TRIMESTER) 
boxplot(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$BODY_LENGTH~OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"]$TRIMESTER) # smaller individuals captured during spring 


ggplot(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis"], aes(BODY_LENGTH, TRIMESTER)) + geom_violin() + geom_boxplot(width = 0.1) +  stat_compare_means(label = "p.format", comparisons = list(c("2", "1"),c("2", "3"),c("2", "4")), size=9) + ggtitle("Common dolphin - BL model - OBSMER dataset") +  labs(y = "Trimester", x = "Captured individuals' body length (cm)") +  theme(text = element_text(size = 30))


ggsave("Figure_S14B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)























# Harbour porpoise:



  # Sex:



table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)



table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$YEAR_DCO)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$YEAR_DCO)



table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$TRIMESTER)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena"]$TRIMESTER) 




  # weight:



# Prior to spatio-temporal tests we checked whether body mass variation depended on the data sources:

table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ORIGIN)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ORIGIN)



table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)


table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_DCO)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_DCO)


table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)
kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)




  # size:



table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)


table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$YEAR_DCO)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$YEAR_DCO) 


table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$TRIMESTER)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena"]$TRIMESTER) 


















#### for by-catch observation only we also explored whether others external parameters (sea state and hauling timing during the day) correlated with by-caught individuals' traits: 


table(OBSMER_Bycatch[SPECIES == "Delphinus delphis"]$SEA_STATE)
table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena"]$SEA_STATE)
# as there is some sea state categories with too little data (highest and lowest sea state measured) we grouped the most extreme conditions together for analyses:

OBSMER_Bycatch$SEA_STATE_grouped=OBSMER_Bycatch$SEA_STATE
OBSMER_Bycatch[SEA_STATE== "", SEA_STATE_grouped:=NA]
OBSMER_Bycatch[SEA_STATE %in% c("0 - Calm (glassy)", "1 - Calm (rippled)"), SEA_STATE_grouped:= "0, 1 - Calm"]
OBSMER_Bycatch[SEA_STATE %in% c("5 - Rough", "6 - Very rough"), SEA_STATE_grouped:= "5, 6 - Rough to very rough"]




# Common dolphin:


  # Sex:


fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped)
table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped) #more male than females captured when calm sea, converse dynamic when agitated sea



ggplot(dcast(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",], SEX + SEA_STATE_grouped ~ ., fun.aggregate = length), aes( x = ., y = SEA_STATE_grouped)) +
  geom_bar(aes(fill = SEX), stat = "identity", position = "dodge") +
  geom_signif(comparisons = list(c("0, 1 - Calm","4 - Moderate"), c("0, 1 - Calm","5, 6 - Rough to very rough")), test = "fisher.test2", y_position = c(35, 41), textsize = 9)  +
  ggtitle("Common dolphin - Sex model - OBSMER dataset") + 
  labs(y = "Sea conditions (Douglas scale)", x = "Number of captured individuals", fill = "Sex") +
  scale_fill_grey(label = c("Female", "Male")) +  theme(text = element_text(size = 30))   +
  scale_x_continuous(limits = c(0,46)) +
  scale_y_discrete(labels=c("Calm (0-1)", "Smooth (2)", "Slight (3)", "Moderate (4)", "Rough (>5)"))
  

ggsave("Figure_S17A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$TRIMESTER, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, simulate.p.value = T) 
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$ICES_DIV_grouped, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, simulate.p.value = T) 
# To be interpreted cautiously due to existing intercollinearity




table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$TIMING_OP)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$TIMING_OP)




  # Body size:



table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH~OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped)
boxplot(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH~OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped) #higher body length captured in calm sea (compared to low agitated sea)



ggplot(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",], aes(BODY_LENGTH, SEA_STATE_grouped)) + 
  geom_violin() + geom_boxplot(width = 0.1) +
  stat_compare_means(label = "p.format", comparisons = list(c("2 - Smooth", "0, 1 - Calm"), c("3 - Slight", "0, 1 - Calm"), c("4 - Moderate", "2 - Smooth"), c("5, 6 - Rough to very rough", "0, 1 - Calm")), size=9) + 
  ggtitle("Common dolphin - BL model - OBSMER dataset") +
  labs(y = "Sea conditions (Douglas scale)", x = "Captured individuals' body length (cm)") +  theme(text = element_text(size = 30)) + scale_y_discrete(labels=c("Calm (0-1)", "Smooth (2)", "Slight (3)", "Moderate (4)", "Rough (>5)"))

 ggsave("Figure_S17B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


fisher.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$TRIMESTER, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, simulate.p.value = T) 
fisher.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$ICES_DIV_grouped, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, simulate.p.value = T) 
# To be interpreted cautiously due to existing intercollinearity




table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$TIMING_OP)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH ~ OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$TIMING_OP)





table(OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$TRIMESTER)
table(OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$ICES_DIV_grouped)
chisq.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$TRIMESTER)
chisq.test(OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$SEA_STATE_grouped, OBSMER_Bycatch[SPECIES == "Delphinus delphis",]$ICES_DIV_grouped)
# For the interpretation of sea state effects: trimester and spatial areas are highly correlated with sea conditions; calm sea conditions were mostly reported in the Bay of Biscay and rough sea conditions mainly in the Channel Sea, these two latter conditions were also mostly reported in winter






# Harbour porpoise:


  # Sex:


fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEA_STATE_grouped)
table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEA_STATE_grouped) 


table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$TIMING_OP)
fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$TIMING_OP)



  # Body size:



table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$SEA_STATE_grouped)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH~OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$SEA_STATE_grouped)


table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$TIMING_OP)
kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH~OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$TIMING_OP)


```





#### Output statististic tables (spatio-temporal regressions)



```{r sensitivity by-catch - spatio-temporal variations Tables}



### Table (S5) combining all statistics of non-parametric tests on phenotypic sensitivity profiles:


TableS5 = cbind(
  "Variable" = c("ICES division", "Trimester", "Time period (year interval)", "Data source"),
  "Df" = c(3, 3, 3, 1),
  "P-value" = c(
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$ICES_DIV_grouped)$p.value, 3),
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$TRIMESTER)$p.value, 3),
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$YEAR_DCO)$p.value, 3),
    ""
  ),
  "Chi-squared (p-value)" = c(
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ICES_DIV_grouped)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$TRIMESTER)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ORIGIN)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$ORIGIN)$p.value, 3), ")")
  ),
  "Chi-squared (p-value)" = c(
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$ICES_DIV_grouped)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$ICES_DIV_grouped)$p.value, 3), ")"),
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$TRIMESTER)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$TRIMESTER)$p.value, 3), ")"),
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$YEAR_DCO)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$YEAR_DCO)$p.value, 3), ")"),
    ""
  ), 
    "P-value" = c(
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$ICES_DIV_grouped)$p.value, 3),
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$TRIMESTER)$p.value, 3),
    round(fisher.test(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$YEAR_PHO)$p.value, 3),
    ""
  ),
  "Chi-squared (p-value)" = c(
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ICES_DIV_grouped)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$TRIMESTER)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_PHO)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_PHO)$p.value, 3), ")"),
    paste0(round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ORIGIN)$statistic, 3), " (", round(kruskal.test(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS ~ Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$ORIGIN)$p.value, 3), ")")
  ),
  "Chi-squared (p-value)" = c(
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$ICES_DIV_grouped)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$ICES_DIV_grouped)$p.value, 3), ")"),
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$TRIMESTER)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$TRIMESTER)$p.value, 3), ")"),
    paste0(round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$YEAR_PHO)$statistic, 3), " (", round(kruskal.test(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$YEAR_PHO)$p.value, 3), ")"), 
    ""
  )
)



TableS5=rbind(TableS5, 
              c("Number of observations",
                "",
                sum(table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Delphinus delphis",]$YEAR_DCO)),
                sum(table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$BODY_MASS, Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis"]$YEAR_DCO)),
                sum(table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Delphinus delphis",]$YEAR_DCO)),
                sum(table(OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$SEX, OBSMER_Bycatch[!is.na(SEX) & SPECIES == "Phocoena phocoena",]$YEAR_PHO)),
                sum(table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$BODY_MASS, Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena"]$YEAR_PHO)),
                sum(table(OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$BODY_LENGTH, OBSMER_Bycatch[!is.na(BODY_LENGTH) & SPECIES == "Phocoena phocoena",]$YEAR_PHO)) ))



TableS5=rbind(colnames(TableS5), TableS5)





colnames(TableS5)=c("", "", "Sex (Fisher test)", "BM (Kruskal-Wallis test)", "BL (Kruskal-Wallis test)", "Sex (Fisher test)", "BM (Kruskal-Wallis test)", "BL (Kruskal-Wallis test)")


kable_classic(add_header_above(kbl(TableS5, format = "latex", vline= ""), c("", "", "Common dolphin" = 3 , "Harbour porpoise" = 3)))






```

# Vulnerability to by-cath


We then explored the susceptibility of individuals to be captured as a function of fishing techniques. These analyses initially considered only the risk of being captured (see first graphical outputs, this part was scanned quickly as it had already been thoroughly studied) and how this susceptibility varies with individual traits (i.e. phenotypic vulnerabilities to fishing technique, see subsequent regression models).


## Bycatch distribution as a function of fishing techniques

```{r susceptibility}


# We first considered only the risk of being captured as a function of fishing techniques. This part was scanned quickly as it had already been thoroughly studied by other researches. We only produced graphical outputs illustrating the relationships between fishing behaviours and the number of captured individuals.




# In the original dataset (combining both by-catch declarations and observations) we grouped some categories to facilitate interpretation of the distribution results (for targeted or most fished taxa, used groups were based on ISSCAAP classification from the FAO):

Decl_Obs_Merged_Bycatch_explanatory[
  FISHING_GEAR %in% c("GNS - Set gillnets", "GTN - Combined gillnets-trammel nets", "GTR - Trammel nets"), FISHING_GEAR_grouped := "Gillnets"][
    FISHING_GEAR %in% c("PS - Purse seines", "SDN - Danish seine"), FISHING_GEAR_grouped := "Seines"][
      FISHING_GEAR == "LLS - Set longlines", FISHING_GEAR_grouped := "Set longlines"][
        FISHING_GEAR %in% c("OTB - Single boat bottom otter trawls", "OTT - Twin bottom otter trawls", "PTB - Bottom pair trawls"), FISHING_GEAR_grouped := "Bottom trawls"][
          FISHING_GEAR %in% c("OTM - Single boat midwater otter trawls", "PTM - Midwater pair trawls"), FISHING_GEAR_grouped := "Midwater trawls"]

table(Decl_Obs_Merged_Bycatch_explanatory$FISHING_GEAR_grouped, Decl_Obs_Merged_Bycatch_explanatory$SPECIES)

table(Decl_Obs_Merged_Bycatch_explanatory$TARGETED_ISSCAAP, Decl_Obs_Merged_Bycatch_explanatory$SPECIES)

table(OBSMER_Bycatch$MOST_FISHED_ISSCAAP, OBSMER_Bycatch$SPECIES)






# Distribution of fishing gears associated with by-catch (Figure S7):



ggplot(Decl_Obs_Merged_Bycatch_explanatory[!is.na(FISHING_GEAR) & SPECIES == "Delphinus delphis"], aes(x = forcats::fct_infreq(FISHING_GEAR), fill = forcats::fct_infreq(FISHING_GEAR_grouped))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Fishing gear", fill = "Main groups") +
  ggtitle("Common dolphin") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_fill_discrete(labels = c("Gillnets (N=186)", "Midwater trawls (N=143)", "Bottom trawls (N=32)", "Seines (N=3)", "Set longlines (N=1)"))


ggsave("Figure_S8A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





ggplot(Decl_Obs_Merged_Bycatch_explanatory[!is.na(FISHING_GEAR) & SPECIES == "Phocoena phocoena"], aes(x = forcats::fct_infreq(FISHING_GEAR), fill = forcats::fct_infreq(FISHING_GEAR_grouped))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Fishing gear", fill = "Main groups") +
  ggtitle("Harbour porpoise") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_fill_discrete(labels = c("Gillnets (N=103)", "Midwater trawls (N=3)", "Bottom trawls (N=5)", "Seines (N=1)"))

ggsave("Figure_S8B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





# Distribution of targeted taxa associated with by-catch (Figure S8):



ggplot(Decl_Obs_Merged_Bycatch_explanatory[!is.na(TARGETED_TAXA) & SPECIES == "Delphinus delphis"], aes(x = forcats::fct_infreq(TARGETED_TAXA), fill = forcats::fct_infreq(TARGETED_ISSCAAP))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Targeted taxa", fill = "ISSCAAP groups") +
  ggtitle("Merged data - Common dolphin") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
  scale_fill_discrete(labels = c("31 - Pleuronectiformes (N=109)", "32 - Gadiformes (N=92)", "33 - Miscellaneous coastal fishes (N=68)", "34 - Miscellaneous demersal fishes  (N=18)",  "36 - Tunas, bonitos (N=17)", "37 - Miscellaneous pelagic fishes (N=12)", "57 - Squids, cuttlefishes, octopuses (N=5)", "35 - Herrings, sardines, anchovies  (N=3)", "43 - Lobsters, spiny-rock lobsters (N=3)",  "38 - Sharks, rays (N=2)"))


ggsave("Figure_S9A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





ggplot(Decl_Obs_Merged_Bycatch_explanatory[!is.na(TARGETED_TAXA) & SPECIES == "Phocoena phocoena"], aes(x = forcats::fct_infreq(TARGETED_TAXA), fill = forcats::fct_infreq(TARGETED_ISSCAAP))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Targeted taxa", fill = "ISSCAAP groups") +
  ggtitle("Merged data - Harbour porpoise") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
  scale_fill_discrete(labels = c("31 - Pleuronectiformes (N=47)", "34 - Miscellaneous demersal fishes  (N=33)", "32 - Gadiformes (N=13)", "33 - Miscellaneous coastal fishes (N=3)",  "38 - Sharks, rays (N=2)", "37 - Miscellaneous pelagic fishes (N=1)", "43 - Lobsters, spiny-rock lobsters (N=1)", "57 - Squids, cuttlefishes, octopuses (N=1)"))


ggsave("Figure_S9B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)







# Distribution of actually mostly fished taxa associated with by-catch (Figure S9):


table(OBSMER_Bycatch[SPECIES == "Delphinus delphis", MOST_FISHED_SP], OBSMER_Bycatch[SPECIES == "Delphinus delphis", MOST_FISHED_ISSCAAP])

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis", MOST_FISHED_SPP], OBSMER_Bycatch[SPECIES == "Delphinus delphis", MOST_FISHED_ISSCAAP])


OBSMER_Bycatch[
  SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "31 - Pleuronectiformes", Most_fished_ISSCAAP_associated_taxa := "Solea solea (97%)"][
    SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "32 - Gadiformes", Most_fished_ISSCAAP_associated_taxa := "Merluccius merluccius (64%)\nand Gadidae (33%, haddock, whiting, pollack)"][
      SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "33 - Miscellaneous coastal fishes", Most_fished_ISSCAAP_associated_taxa := "Dicentrarchus spp (93%)"][
        SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "34 - Miscellaneous demersal fishes", Most_fished_ISSCAAP_associated_taxa := "Lophius spp (58%) and Zeidae (33%)"][
          SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "36 - Tunas, bonitos", Most_fished_ISSCAAP_associated_taxa := "Thunnus spp (90%)"][
            SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "37 - Miscellaneous pelagic fishes", Most_fished_ISSCAAP_associated_taxa := "Trachurus spp (78%) and Scomber spp (22%)"][
              SPECIES == "Delphinus delphis" & MOST_FISHED_ISSCAAP == "38 - Sharks, rays", Most_fished_ISSCAAP_associated_taxa := "Raja spp (42%) and diverse shark species\n(50%, Scyliorhinus, Alopias and Mustelus spp)"]

# To better illustrate the distribution of mostly fished taxa associated with by-catch, we defined the proportion of most fished species or group of species mainly associated with mostly fished ISSCAAP groups (only for ISSCAAP groups with more than 6 by-catch observations, as other groups will not be considered for analyses because too rare). The proportion were computed from the above tables and the total number of data available for the most fished associated ISSCAAP group.




ggplot(OBSMER_Bycatch[!is.na(MOST_FISHED_ISSCAAP) & SPECIES == "Delphinus delphis"], aes(x = forcats::fct_infreq(MOST_FISHED_ISSCAAP), fill = forcats::fct_infreq(Most_fished_ISSCAAP_associated_taxa))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Mostly fished ISSCAAP group", fill = "Main associated fished taxa") +
  ggtitle("OBSMER - Common dolphin") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
   scale_fill_discrete(breaks = c("Merluccius merluccius (64%)\nand Gadidae (33%, haddock, whiting, pollack)", "Dicentrarchus spp (93%)", "Solea solea (97%)", "Lophius spp (58%) and Zeidae (33%)", "Raja spp (42%) and diverse shark species\n(50%, Scyliorhinus, Alopias and Mustelus spp)", "Thunnus spp (90%)", "Trachurus spp (78%) and Scomber spp (22%)"),labels = c("*Merluccius merluccius* (64%)<br>and Gadidae (33%, haddock, whiting, pollack)", "Dicentrarchus spp (93%)", "*Solea solea* (97%)", "Lophius spp (58%) and Zeidae (33%)", "Raja spp (42%) and diverse shark species<br>(50%, Scyliorhinus, Alopias and Mustelus spp)", "Thunnus spp (90%)", "Trachurus spp (78%) and Scomber spp (22%)")) +
    theme(legend.text = element_markdown())


ggsave("Figure_S10A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)










table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena", MOST_FISHED_SP], OBSMER_Bycatch[SPECIES == "Phocoena phocoena", MOST_FISHED_ISSCAAP])

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena", MOST_FISHED_SPP], OBSMER_Bycatch[SPECIES == "Phocoena phocoena", MOST_FISHED_ISSCAAP])


OBSMER_Bycatch[
  SPECIES == "Phocoena phocoena" & MOST_FISHED_ISSCAAP == "31 - Pleuronectiformes", Most_fished_ISSCAAP_associated_taxa := "Solea spp (79%) and Scophthalmidae (21%)"][
    SPECIES == "Phocoena phocoena" & MOST_FISHED_ISSCAAP == "32 - Gadiformes", Most_fished_ISSCAAP_associated_taxa := "Gadidae (88%, mostly pollack)"][
      SPECIES == "Phocoena phocoena" & MOST_FISHED_ISSCAAP == "45 - Crabs, sea-spiders", Most_fished_ISSCAAP_associated_taxa := "Cancer pagurus (71%)"][
        SPECIES == "Phocoena phocoena" & MOST_FISHED_ISSCAAP == "34 - Miscellaneous demersal fishes", Most_fished_ISSCAAP_associated_taxa := "Lophius spp (84%)"]

# To better illustrate the distribution of mostly fished taxa associated with by-catch, we defined the proportion of most fished species or group of species mainly associated with mostly fished ISSCAAP groups (only for ISSCAAP groups with more than 6 by-catch observations, as other groups will not be considered for analyses because too rare). The proportion were computed from the the above tables and the total number of data available for the most fished associated ISSCAAP group.




ggplot(OBSMER_Bycatch[!is.na(MOST_FISHED_ISSCAAP) & SPECIES == "Phocoena phocoena"], aes(x = forcats::fct_infreq(MOST_FISHED_ISSCAAP), fill = forcats::fct_infreq(Most_fished_ISSCAAP_associated_taxa))) +
  geom_bar()  +
  labs(y = "Number of captures", x = "Mostly fished ISSCAAP group", fill = "Main associated fished taxa") +
  ggtitle("OBSMER - Harbour porpoise") +
  theme(text = element_text(size = 20))   +    theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
   scale_fill_discrete(breaks = c("Solea spp (79%) and Scophthalmidae (21%)","Lophius spp (84%)","Gadidae (88%, mostly pollack)","Cancer pagurus (71%)"), labels = c("Solea spp (79%) and Scophthalmidae (21%)","Lophius spp (84%)","Gadidae (87%, mostly pollack)","*Cancer pagurus* (71%)")) +
    theme(legend.text = element_markdown())


ggsave("Figure_S10B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)





```


## Distribution of by-caught individuals' traits as a function of fishing techniques (vulnerabilities to fishing techniques)

We then studied how traits of by-caught individuals varied with used fishing techniques, so as to identify potential phenotypic vulnerabilities. Three phenotypic traits were studied: the by-caught individuals' body mass (using both declaration and observation data), body length and sex (using observation data only). 


### Weight model (observation and declaration data combined)

```{r weight model}


# To avoid too rare categories to be included in our analyses and to facilitate the interpretation of potential effects, we have combined the different fishing gear categories into two main groups: trawls and seines (hereafter referred to as trawls), and set gillnets and trammel nets (hereafter referred to as gillnets)


Decl_Obs_Merged_Bycatch[
  FISHING_GEAR %in% c("GNS - Set gillnets", "GTN - Combined gillnets-trammel nets", "GTR - Trammel nets"), FISHING_GEAR_grouped := "Gillnets"][
    FISHING_GEAR %in% c("OTB - Single boat bottom otter trawls", "OTT - Twin bottom otter trawls", "PTB - Bottom pair trawls", "PS - Purse seines", "SDN - Danish seine", "OTM - Single boat midwater otter trawls", "PTM - Midwater pair trawls"), FISHING_GEAR_grouped := "Trawls"]



Decl_Obs_Merged_Bycatch[, FISHING_GEAR_grouped := as.factor(FISHING_GEAR_grouped)]
Decl_Obs_Merged_Bycatch[, TARGETED_ISSCAAP := as.factor(TARGETED_ISSCAAP)]




######## Harbour porpoise:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped)]$TARGETED_ISSCAAP)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped)]$FISHING_GEAR_grouped)



table(Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & TARGETED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "34 - Miscellaneous demersal fishes")]$FISHING_GEAR_grouped)
# in this specific case there is rare categories in both categorical variables: removing rare categories in targeted ISSCAAP group categories lead to the presence of too rare categories in used fishing gears. We therefore cannot use both variables in the model. In this particular case, we chose to favor the use of used fishing gear in explanatory variables.



# dataset used for body mass regression analysis on harbour porpoises:
Decl_Obs_Merged_Bycatch_BM_PHO = Decl_Obs_Merged_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(FISHING_GEAR_grouped) & !is.na(MESH_SIZE)]




# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there is significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):


vif(lm(data = Decl_Obs_Merged_Bycatch_BM_PHO, BODY_MASS ~ MESH_SIZE + FISHING_GEAR_grouped))
# correlation level between explanatory variables reasonable (GVIF^(1/(2*Df)) < 2.24)




# implementation and analyses of the regression model:


model_BM_PHO <- lm(data = Decl_Obs_Merged_Bycatch_BM_PHO, BODY_MASS ~ MESH_SIZE + FISHING_GEAR_grouped) 


summary(model_BM_PHO)
Anova(model_BM_PHO)

plot(ggemmeans(model_BM_PHO, terms = "MESH_SIZE"), show_data = T, jitter = 2, dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body mass\nas a function of used mesh size") +
  labs(y = "Body mass (kg)", x = "Mesh size (mm)")  +
  scale_y_continuous(limits = c(75, 300)) +
  theme(text = element_text(size = 30)) 

ggsave("Figure_4A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



ggplot(data = Decl_Obs_Merged_Bycatch_BM_PHO, aes(BODY_MASS, MESH_SIZE, color=TARGETED_ISSCAAP)) + geom_jitter()
# For the interpretation of the latter effect: a large majority of large mesh size (>200mm) are associated with targeting miscellaneous demersal fishes (i.e. mainly mofishes or Zeidae)



simulateResiduals(fittedModel = model_BM_PHO, plot = T) 
plot(cooks.distance(model_BM_PHO) )  
# diagnostic plots of model: OK 












######## Common dolphin:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped)]$TARGETED_ISSCAAP)

table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped)]$FISHING_GEAR_grouped)


table(Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & TARGETED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes")]$FISHING_GEAR_grouped)



# dataset used for body mass regression analysis on common dolphin:
Decl_Obs_Merged_Bycatch_BM_DCO = Decl_Obs_Merged_Bycatch[SPECIES == "Delphinus delphis" & !is.na(TARGETED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & TARGETED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes")]



# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there is significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):

vif(lm(data = Decl_Obs_Merged_Bycatch_BM_DCO, BODY_MASS ~ MESH_SIZE + FISHING_GEAR_grouped + TARGETED_ISSCAAP))
# correlation level between explanatory variables reasonable (GVIF^(1/(2*Df)) < 2.24)

anova(lmer(data = Decl_Obs_Merged_Bycatch_BM_DCO, BODY_MASS ~ 1 + (1|YEAR_DCO)), lm(data = Decl_Obs_Merged_Bycatch_BM_DCO, BODY_MASS ~ 1))
 #random effects does not seems necessary (to be noticed: no difference if included)



# reordering variable to improve plot readability:

Decl_Obs_Merged_Bycatch_BM_DCO$TARGETED_ISSCAAP = factor(Decl_Obs_Merged_Bycatch_BM_DCO$TARGETED_ISSCAAP, levels = c("34 - Miscellaneous demersal fishes", "31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes"), labels = c("34 - Miscellaneous\ndemersal fishes\n(mainly monkfishes)", "31 - Pleuronectiformes\n(mainly soles)", "32 - Gadiformes\n(mainly hake)", "33 - Miscellaneous\ncoastal fishes\n(mainly sea bass)"))



# implementation and analyses of the regression model:

model_BM_DCO <- lm(data = Decl_Obs_Merged_Bycatch_BM_DCO, BODY_MASS ~ MESH_SIZE + FISHING_GEAR_grouped + TARGETED_ISSCAAP) 


summary(model_BM_DCO)
Anova(model_BM_DCO)

plot(ggemmeans(model_BM_DCO, terms = "FISHING_GEAR_grouped"), show_data = T, jitter=c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body mass\nas a function of used fishing gear") +
  labs(y = "Body mass (kg)", x = "Fishing gears")  +
  theme(text = element_text(size = 30)) 

ggsave("Figure_5A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(model_BM_DCO, terms = "TARGETED_ISSCAAP"), show_data = T, jitter=c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body mass\nas a function of targeted taxa") +
  labs(y = "Body mass (kg)", x = "Targeted taxa (ISSCAAP group)")  +
  theme(text = element_text(size = 30))   +  theme(axis.text.x = element_text(angle = 55, hjust = 1))

ggsave("Figure_5B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


pairs(emmeans(model_BM_DCO, "TARGETED_ISSCAAP"))
pairs(emmeans(model_BM_DCO, "TARGETED_ISSCAAP"), adjust = "none")
# post-hoc pairwise comparison tests



ggplot(data = Decl_Obs_Merged_Bycatch_BM_DCO, aes(BODY_MASS, MESH_SIZE, color=TARGETED_ISSCAAP)) + geom_jitter()
# For the interpretation of the latter effect: a large majority of large mesh size (>200mm) are associated with targeting miscellaneous demersal fishes (i.e. mainly monkfishes or Zeidae)




simulateResiduals(fittedModel = model_BM_DCO, plot = T) 
plot(cooks.distance(model_BM_DCO) )  
# Diagnostic plots revealed deviations from statistical assumptions 





hist(Decl_Obs_Merged_Bycatch_BM_DCO$BODY_MASS) # positively skewed distribution (same for residuals)
hist(sqrt(Decl_Obs_Merged_Bycatch_BM_DCO$BODY_MASS)) # way better after squared root transformation



model_BM_DCO_sqrt <- lm(data = Decl_Obs_Merged_Bycatch_BM_DCO, sqrt(BODY_MASS) ~ MESH_SIZE + FISHING_GEAR_grouped + TARGETED_ISSCAAP) 


summary(model_BM_DCO_sqrt)
Anova(model_BM_DCO_sqrt)



plot(ggemmeans(model_BM_DCO_sqrt, terms = "FISHING_GEAR_grouped"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body mass\nas a function of used fishing gear") +
  labs(y = "Body mass (kg)", x = "Fishing gears")  +
  theme(text = element_text(size = 30)) 
ggsave("Figure_S11A.pdf", device = "pdf", units = "in", width = 14, height = 8.5)

plot(ggemmeans(model_BM_DCO_sqrt, terms = "TARGETED_ISSCAAP"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body mass\nas a function of targeted taxa") +
  labs(y = "Body mass (kg)", x = "Targeted taxa (ISSCAAP group)")  +
  theme(text = element_text(size = 30))   +  theme(axis.text.x = element_text(angle = 55, hjust = 1))
ggsave("Figure_S11B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



pairs(emmeans(model_BM_DCO_sqrt, "TARGETED_ISSCAAP"))
pairs(emmeans(model_BM_DCO_sqrt, "TARGETED_ISSCAAP"), adjust = "none")
# post-hoc pairwise comparison tests

# output nearly identical than before transforming data



simulateResiduals(fittedModel = model_BM_DCO_sqrt, plot = T) 
plot(cooks.distance(model_BM_DCO_sqrt) )  
#diagnostic plots of model: OK 






```

### Size model (OBSMER)

```{r size model}




# To avoid too rare categories to be included in our analyses and to facilitate the interpretation of potential effects, we have combined the different fishing gear categories into two main groups: trawls and seines (hereafter referred to as trawls), and set gillnets and trammel nets (hereafter referred to as gillnets)


OBSMER_Bycatch[
  FISHING_GEAR %in% c("GNS - Set gillnets", "GTN - Combined gillnets-trammel nets", "GTR - Trammel nets"), FISHING_GEAR_grouped := "Gillnets"][
    FISHING_GEAR %in% c("OTB - Single boat bottom otter trawls", "OTT - Twin bottom otter trawls", "PTB - Bottom pair trawls", "PS - Purse seines", "SDN - Danish seine", "OTM - Single boat midwater otter trawls", "PTM - Midwater pair trawls"), FISHING_GEAR_grouped := "Trawls"]



OBSMER_Bycatch[, FISHING_GEAR_grouped := as.factor(FISHING_GEAR_grouped)]
OBSMER_Bycatch[, MOST_FISHED_ISSCAAP := as.factor(MOST_FISHED_ISSCAAP)]
OBSMER_Bycatch[, DETERRENT_DEVICE := as.factor(DETERRENT_DEVICE)]
OBSMER_Bycatch[, SEX := as.factor(SEX)]






# OBSMER data contained more detailed descriptions of fishing techniques. Some of them contained a large part of missing values or were highly inter-correlated. We removed such variables from analyses (see details below).


apply(OBSMER_Bycatch, 2, function(x) table(is.na(x)))
# some variables present too many missing values to be included in analyses (as gear speed only available for trawls)

cor.test(OBSMER_Bycatch$GEAR_DIMENSION, OBSMER_Bycatch$MESH_SIZE)
wilcox.test(OBSMER_Bycatch$GEAR_DIMENSION ~ OBSMER_Bycatch$FISHING_GEAR_grouped)
kruskal.test(OBSMER_Bycatch$GEAR_DIMENSION, OBSMER_Bycatch$MOST_FISHED_ISSCAAP)
# gear dimension strongly correlated with gear type, targeted taxa, and mesh size

kruskal.test(OBSMER_Bycatch$GEAR_DEPTH, OBSMER_Bycatch$MOST_FISHED_ISSCAAP)
# gear depth was well described by the targeted taxa (and was also associated with 14% of missing value)


# gear speed, dimension and depth were discarded from analyses due to too many missing values and/or because they were too well described by other variables (in this latter case including these variables in regression models resulted in too high VIF values)



# Other remaining variables (namely: gear type, mesh size, most caught taxa, total catch weight, soaking time, and presence of an acoustic deterrent device) were used in all subsequent analyses using OBSMER data











######## Harbour porpoise:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$MOST_FISHED_ISSCAAP)

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$FISHING_GEAR_grouped)

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$DETERRENT_DEVICE)
# There is not enough diversity in the presence of an acoustic deterrent to include this variable in the present analysis




table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "34 - Miscellaneous demersal fishes")]$FISHING_GEAR_grouped)
# in this specific case there are rare categories in both categorical variables: removing rare categories in targeted ISSCAAP groups categories lead to the presence of too rare categories in used fishing gears. We therefore cannot use both variables in the model. In this particular case we chose to favor the use of used fishing gear in explanatory variables.



# dataset used for body length regression analysis on harbour porpoises:
OBSMER_Bycatch_BL_PHO = OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(BODY_LENGTH) & !is.na(FISHING_GEAR_grouped) & !is.na(MESH_SIZE) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT)]




# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there are significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):


vif(lm(data = OBSMER_Bycatch_BL_PHO, BODY_LENGTH ~ MESH_SIZE + FISHING_GEAR_grouped + DURATION_OP + TOTAL_CATCH_WEIGHT))
# correlation level between explanatory variables reasonable (GVIF < 5)




# implementation and analyses of the regression model:


model_BL_PHO <- lm(data = OBSMER_Bycatch_BL_PHO, BODY_LENGTH ~ MESH_SIZE + FISHING_GEAR_grouped + DURATION_OP + TOTAL_CATCH_WEIGHT) 


summary(model_BL_PHO)
Anova(model_BL_PHO)

plot(ggemmeans(model_BL_PHO, terms = "MESH_SIZE"), show_data = T, jitter = 2, dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of used mesh size") +
  labs(y = "Body length (cm)", x = "Mesh size (mm)")  +
  theme(text = element_text(size = 30)) 

ggsave("Figure_4B.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


ggplot(data = OBSMER_Bycatch_BL_PHO, aes(BODY_LENGTH, MESH_SIZE, color = TARGETED_ISSCAAP)) + geom_jitter()
# For the interpretation of the latter effect: a large majority of large mesh size (>200mm) are associated with targeting miscellaneous demersal fishes (i.e. mainly mofishes or Zeidae)



plot(ggemmeans(model_BL_PHO, terms = "FISHING_GEAR_grouped"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of used fishing gear") +
  labs(y = "Body length (cm)", x = "Fishing gear")  +
  theme(text = element_text(size = 30)) 

ggsave("Figure_4C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)




simulateResiduals(fittedModel = model_BL_PHO, plot = T) 
plot(cooks.distance(model_BL_PHO) )  
# diagnostic plots of model: OK 













######## Common dolphin:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$MOST_FISHED_ISSCAAP)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$FISHING_GEAR_grouped)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$DETERRENT_DEVICE)



table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes", "36 - Tunas, bonitos", "37 - Miscellaneous pelagic fishes", "38 - Sharks, rays")]$FISHING_GEAR_grouped)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes", "36 - Tunas, bonitos", "37 - Miscellaneous pelagic fishes", "38 - Sharks, rays")]$DETERRENT_DEVICE)




# dataset used for body length regression analysis on common dolphin:
OBSMER_Bycatch_BL_DCO = OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(BODY_LENGTH) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes", "36 - Tunas, bonitos", "37 - Miscellaneous pelagic fishes", "38 - Sharks, rays")]



# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there are significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):

vif(lm(data = OBSMER_Bycatch_BL_DCO, BODY_LENGTH ~ MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE))
# correlation level between explanatory variables reasonable (GVIF^(1/(2*Df)) < 2.24)

anova(lmer(data = OBSMER_Bycatch_BL_DCO, BODY_LENGTH ~ 1 + (1|TRIMESTER)), lm(data = OBSMER_Bycatch_BL_DCO, BODY_LENGTH ~ 1))
 #random effects does not seems necessary (to be noticed: no difference if included)



# reordering variable to improve plot readability:

OBSMER_Bycatch_BL_DCO$MOST_FISHED_ISSCAAP = factor(OBSMER_Bycatch_BL_DCO$MOST_FISHED_ISSCAAP, levels = c("31 - Pleuronectiformes", "38 - Sharks, rays", "32 - Gadiformes", "36 - Tunas, bonitos", "37 - Miscellaneous pelagic fishes", "33 - Miscellaneous coastal fishes", "34 - Miscellaneous demersal fishes"), labels = c("31 - Pleuronectiformes\n(mainly soles)", "38 - Sharks, rays", "32 - Gadiformes\n(mainly hake)", "36 - Tunas, bonitos", "37 - Miscellaneous\npelagic fishes\n(mainly mackerells)", "33 - Miscellaneous\ncoastal fishes\n(mainly sea bass)", "34 - Miscellaneous\ndemersal fishes\n(mainly monkfishes)"))


# implementation and analyses of the regression model:

model_BL_DCO <- lm(data = OBSMER_Bycatch_BL_DCO, BODY_LENGTH ~  MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE) 


summary(model_BL_DCO)
Anova(model_BL_DCO)

plot(ggemmeans(model_BL_DCO, terms = "FISHING_GEAR_grouped"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of used fishing gear") +
  labs(y = "Body length (cm)", x = "Fishing gears")  +
  theme(text = element_text(size = 30)) 

ggsave("Figure_5C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(model_BL_DCO, terms = "MOST_FISHED_ISSCAAP"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of most fished taxa") +
  labs(y = "Body length (cm)", x = "Most fished taxa (ISSCAAP group)")  +
  theme(text = element_text(size = 30))   +  theme(axis.text.x = element_text(angle = 55, hjust = 1))

ggsave("Figure_5D.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(model_BL_DCO, terms = "DETERRENT_DEVICE"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of deterrent device presence") +
  labs(y = "Body length (cm)", x = "Presence of a deterrent device")  +
  theme(text = element_text(size = 30))   +
  scale_x_continuous(breaks=c(1:2), labels=c("Absence", "Presence"))

ggsave("Figure_5E.pdf", device = "pdf", units = "in", width = 14, height = 8.5)




pairs(emmeans(model_BL_DCO, "MOST_FISHED_ISSCAAP"))
pairs(emmeans(model_BL_DCO, "MOST_FISHED_ISSCAAP"), adjust = "none")
# post-hoc pairwise comparison tests


simulateResiduals(fittedModel = model_BL_DCO, plot = T) 
plot(cooks.distance(model_BL_DCO) )  
# Diagnostic plots revealed deviations from statistical assumptions 





hist(OBSMER_Bycatch_BL_DCO$BODY_LENGTH) # negatively skewed distribution (same for residuals)
hist(OBSMER_Bycatch_BL_DCO$BODY_LENGTH^2) # way better after squared transformation



model_BL_DCO_squared <- lm(data = OBSMER_Bycatch_BL_DCO, I(BODY_LENGTH^2) ~ MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE) 


summary(model_BL_DCO_squared)
Anova(model_BL_DCO_squared)



plot(ggemmeans(model_BL_DCO_squared, terms = "FISHING_GEAR_grouped"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of used fishing gear") +
  labs(y = "Body length (cm)", x = "Fishing gears")  +
  theme(text = element_text(size = 30)) 

ggsave("Figure_S11C.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(model_BL_DCO_squared, terms = "MOST_FISHED_ISSCAAP"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of most fished taxa") +
  labs(y = "Body length (cm)", x = "Most fished taxa (ISSCAAP group)")  +
  theme(text = element_text(size = 30))   +  theme(axis.text.x = element_text(angle = 55, hjust = 1))

ggsave("Figure_S11D.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


plot(ggemmeans(model_BL_DCO_squared, terms = "DETERRENT_DEVICE"), show_data = T, jitter = c(0.7, 0), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's body length\nas a function of deterrent device presence") +
  labs(y = "Body length (cm)", x = "Presence of a deterrent device")  +
  theme(text = element_text(size = 30))   +
  scale_x_continuous(breaks=c(1:2), labels=c("Absence", "Presence"))

ggsave("Figure_S11E.pdf", device = "pdf", units = "in", width = 14, height = 8.5)



pairs(emmeans(model_BL_DCO_squared, "MOST_FISHED_ISSCAAP"))
pairs(emmeans(model_BL_DCO_squared, "MOST_FISHED_ISSCAAP"), adjust = "none")
# post-hoc pairwise comparison tests

# output nearly identical than before transforming data



simulateResiduals(fittedModel = model_BL_DCO_squared, plot = T) 
plot(cooks.distance(model_BL_DCO_squared) )  
#diagnostic plots of model: OK (still significant deviation for first quantile, but reasonable and combined adjusted quantile NS)







```

### Sex model (OBSMER)

```{r sex model}




######## Harbour porpoise:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$MOST_FISHED_ISSCAAP)

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$FISHING_GEAR_grouped)
# There is not enough diversity in the different used fishing gears to include this variable in the present analysis

table(OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$DETERRENT_DEVICE)
# There is not enough diversity in the presence of an acoustic deterrent to include this variable in the present analysis






# dataset used for sex regression analysis on harbour porpoises:
OBSMER_Bycatch_Sex_PHO = OBSMER_Bycatch[SPECIES == "Phocoena phocoena" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "34 - Miscellaneous demersal fishes")]




# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there are significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):


vif(glm(data = OBSMER_Bycatch_Sex_PHO, SEX ~ MESH_SIZE + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT, family = "binomial"))
# correlation level between explanatory variables is too high for mesh size and most fished taxa variables (GVIF > 5). We removed from the analysis the variable with the highest VIF: the mesh size.

model_sex_PHO_high_vif <- glm(data = OBSMER_Bycatch_Sex_PHO, SEX ~ MESH_SIZE + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT, family = "binomial") 



vif(glm(data = OBSMER_Bycatch_Sex_PHO, SEX ~ MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT, family = "binomial"))
# correlation level between explanatory variables reasonable (GVIF < 5)




# implementation and analyses of the regression model:


model_sex_PHO <- glm(data = OBSMER_Bycatch_Sex_PHO, SEX ~ MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT, family = "binomial") 


summary(model_sex_PHO)
Anova(model_sex_PHO)



simulateResiduals(fittedModel = model_BL_PHO, plot = T) 
plot(cooks.distance(model_BL_PHO) )  
# diagnostic plots of model: OK 













######## Common dolphin:


# We began to remove too rare categories (N<6) from regression analyses (while having removed all by-catch data with missing values for at least one of the considered explanatory variables):

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$MOST_FISHED_ISSCAAP)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$FISHING_GEAR_grouped)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE)]$DETERRENT_DEVICE)



table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "38 - Sharks, rays")]$FISHING_GEAR_grouped)

table(OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "38 - Sharks, rays")]$DETERRENT_DEVICE)




# dataset used for sex regression analysis on common dolphin:
OBSMER_Bycatch_Sex_DCO = OBSMER_Bycatch[SPECIES == "Delphinus delphis" & !is.na(SEX) & !is.na(MOST_FISHED_ISSCAAP) & !is.na(MESH_SIZE) & !is.na(FISHING_GEAR_grouped) & !is.na(DURATION_OP) & !is.na(TOTAL_CATCH_WEIGHT) & !is.na(DETERRENT_DEVICE) & MOST_FISHED_ISSCAAP %in% c("31 - Pleuronectiformes", "32 - Gadiformes", "33 - Miscellaneous coastal fishes", "38 - Sharks, rays")]



# we then checked for collinearity between explanatory variables (and for the inclusion of potential random effects, only when there are significant non-parametric tests of spatio-temporal (and source) effects on the phenotype of by-catch individuals):

vif(glm(data = OBSMER_Bycatch_Sex_DCO, SEX ~ MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE, family = "binomial"))
# correlation level between explanatory variables reasonable (GVIF^(1/(2*Df)) < 2.24)






# implementation and analyses of the regression model:

model_sex_DCO <- glm(data = OBSMER_Bycatch_Sex_DCO, SEX ~  MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE, family = "binomial") 


summary(model_sex_DCO)
Anova(model_sex_DCO)

plot(ggemmeans(model_sex_DCO, terms = "TOTAL_CATCH_WEIGHT"), show_data = T, jitter= c(0, 0.1), dot_alpha = 0.2) +
  ggtitle("Predicted by-caught individual's sex\nas a function of total catch weight") +
  labs(y = "By-caught individual's sex (probability)", x = "Total catch weight (kg)")  +
  theme(text = element_text(size = 30))  #more females captures when high fishing weight, but this effect is driven by only one capture events for a group only constituted of females (highly sensitive to one outlier event, without it there is no significant effects anymore of this variable: see below)

ggsave("Figure_S16.pdf", device = "pdf", units = "in", width = 14, height = 8.5)


model_sex_DCO_wo_outlier <- glm(data = OBSMER_Bycatch_Sex_DCO[TOTAL_CATCH_WEIGHT<5000], SEX ~  MESH_SIZE + FISHING_GEAR_grouped + MOST_FISHED_ISSCAAP + DURATION_OP + TOTAL_CATCH_WEIGHT + DETERRENT_DEVICE, family = "binomial") 

summary(model_sex_DCO_wo_outlier)
Anova(model_sex_DCO_wo_outlier)




simulateResiduals(fittedModel = model_sex_DCO, plot = T) 
plot(cooks.distance(model_sex_DCO) )  
# Diagnostic plots OK






```




### Output statististic tables (vulnerabilities regressions)




```{r tables susceptibility models}






### Global table (Table S6) of phenotypic vulnerabilities regression models (ANOVA, type II):


TableS6 = merge(merge(merge(merge(merge(merge(merge(
  as.data.table(Anova(model_sex_DCO)[, -2], keep.rownames = T), as.data.table(Anova(model_BM_DCO)[-4, c(-1, -2)], keep.rownames = T), by = "rn", all = T),
  as.data.table(Anova(model_BM_DCO_sqrt)[-4, c(-1, -2)], keep.rownames = T), by = "rn", all = T),
  as.data.table(Anova(model_BL_DCO)[-7, c(-1, -2)], keep.rownames = T), by = "rn", all = T),
  as.data.table(Anova(model_BL_DCO_squared)[-7, c(-1, -2)], keep.rownames = T), by = "rn", all = T)[, setnames(.SD, c("F value.x", "Pr(>F).x", "F value.y", "Pr(>F).y"), c("F value.xz", "Pr(>F).xz", "F value.yz", "Pr(>F).yz"))],
  as.data.table(Anova(model_sex_PHO)[, -2], keep.rownames = T), by = "rn", all = T),
  as.data.table(Anova(model_BM_PHO)[-3, c(-1, -2)], keep.rownames = T), by = "rn", all = T),
  as.data.table(Anova(model_BL_PHO)[-5, c(-1, -2)], keep.rownames = T), by = "rn", all = T)


TableS6$Df = c(1, 1, 1, 1, "3/6/1", 3, 1)



TableS6 = TableS6[c(3, 4, 6, 5, 2, 7, 1), c(1, 18, 2:17)]






TableS6 = cbind(TableS6[, 1:2], mapply(function(x, y) paste0(signif(x, digits = 3), " (", signif(y, digits = 3), ")"), TableS6[, seq(3, 18, 2), with = F], TableS6[, seq(4, 18, 2), with = F])) # grouping of statistical values with associated p-values


setDF(TableS6)

TableS6 = cbind(TableS6[, 1:3], paste0(TableS6[, 4], " / ", TableS6[, 5]), paste0(TableS6[, 6], " / ", TableS6[, 7]), TableS6[8:10]) # grouping of models before/after variable transformation

setDT(TableS6)

TableS6 = TableS6[, lapply(.SD, function(x) ifelse(x %in% c("NA (NA) / NA (NA)", "NA (NA)"), "", x))]




colnames(TableS6) = c("", "Df", "LR Chisq (P-value)", rep("F Value (P-value)", 2), "LR Chisq (P-value)", rep("F Value (P-value)", 2))

TableS6[,1] = c("Used gear", "Mesh size", "Targeted taxa (ISSCAAP code)", "Fished taxa (ISSCAAP code)", "Soaking time", "Total catch weight", "Presence of an acoustic repellent")


setDF(TableS6)

TableS6 = rbind(TableS6, c("Number of observations", "", model_sex_DCO$df.null, model_BM_DCO$df.residual+7, model_BL_DCO$df.residual+11, model_sex_PHO$df.null, model_BM_PHO$df.residual+3, model_BL_PHO$df.residual+4))



TableS6 = rbind(TableS6, c("R-squared", "", signif(rsq.n(model_sex_DCO), digits = 3),
                           paste0(signif(summary(model_BM_DCO)$r.squared, digits = 3), " / ", signif(summary(model_BM_DCO_sqrt)$r.squared, digits = 3)),
                           paste0(signif(summary(model_BL_DCO)$r.squared, digits = 3), " / ", signif(summary(model_BL_DCO_squared)$r.squared, digits = 3)), 
                           signif(rsq.n(model_sex_PHO), digits = 3),
                           signif(summary(model_BM_PHO)$r.squared, digits = 3),
                           signif(summary(model_BL_PHO)$r.squared, digits = 3)))


TableS6 = rbind(colnames(TableS6), TableS6)

colnames(TableS6) = c("", "", "Sex (logistic regression)", "Body mass (linear regression)", "Body size (linear regression)", "Sex (logistic regression)", "Body mass (linear regression)", "Body size (linear regression)")


kable_classic(add_header_above(kbl(TableS6, format = "latex", vline= ""), c("", "", "Common dolphin" = 3 , "Harbour porpoise" = 3)))










### Table (S7) combining pairwise contrast comparison tests for each significant variable in vulnerabilities regression models:


TableS7 = rbind( 
  cbind('Response/Explanatory variables'= "BM / Targeted taxa", 'Response variable transformation'= "None", as.data.frame(pairs(emmeans(model_BM_DCO, "TARGETED_ISSCAAP"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(model_BM_DCO, "TARGETED_ISSCAAP")))$p.value),
    cbind('Response/Explanatory variables'= "BM / Targeted taxa", 'Response variable transformation'= "Squared root", as.data.frame(pairs(emmeans(model_BM_DCO_sqrt, "TARGETED_ISSCAAP"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(model_BM_DCO_sqrt, "TARGETED_ISSCAAP")))$p.value),
  cbind('Response/Explanatory variables'= "BL / Fished taxa (ISSCAAP code)", 'Response variable transformation'= "None", as.data.frame(pairs(emmeans(model_BL_DCO, "MOST_FISHED_ISSCAAP"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(model_BL_DCO, "MOST_FISHED_ISSCAAP")))$p.value),
    cbind('Response/Explanatory variables'= "BL / Fished taxa (ISSCAAP code)", 'Response variable transformation'= "Squared", as.data.frame(pairs(emmeans(model_BL_DCO_squared, "MOST_FISHED_ISSCAAP"), adjust = "none")), adj.p.value = as.data.frame(pairs(emmeans(model_BL_DCO_squared, "MOST_FISHED_ISSCAAP")))$p.value)
  )


TableS7$df = NULL

TableS7[sapply(TableS7, is.numeric)] = lapply(TableS7[sapply(TableS7, is.numeric)], round, 3)




TableS7 = TableS7[TableS7$p.value < 0.05,]

rownames(TableS7) = NULL

setDT(TableS7)
TableS7 = TableS7[, lapply(.SD, function(x) ifelse(str_detect(x, "\n"), str_replace_all(x, "\n", " "), x))]
setDF(TableS7)

 kable_classic(collapse_rows(kbl(TableS7, format = "latex"), columns = 1:2, target = 1, valign = "middle"))


 
 
 
 
 
 
 
 
 
 
 
 ### VIF table (table S1):
 
 
 

TableS1 = merge(merge(merge(merge(merge(merge(
  as.data.table(vif(model_sex_DCO)[, -2], keep.rownames = T), as.data.table(vif(model_BM_DCO)[, -2], keep.rownames = T), by = "rn", all = T),
  as.data.table(vif(model_BL_DCO)[, -2], keep.rownames = T), by = "rn", all = T, suffixes = c("a", "b")),
  as.data.table(vif(model_sex_PHO_high_vif), keep.rownames = T), by.x = "rn", by.y = "V1", all = T),
  as.data.table(vif(model_sex_PHO), keep.rownames = T), by.x = "rn", by.y = "V1", all = T),
  as.data.table(vif(model_BM_PHO), keep.rownames = T), by.x = "rn", by.y = "V1", all = T),
  as.data.table(vif(model_BL_PHO), keep.rownames = T), by.x = "rn", by.y = "V1", all = T, suffixes = c("c", "d"))


TableS1$Df = c(1, 1, 1, 1, "3/6/1", 3, 1)



TableS1 = TableS1[c(3, 4, 6, 5, 2, 7, 1), c(1, 12, 2:11)]




setDF(TableS1)


TableS1[sapply(TableS1, is.numeric)] = lapply(TableS1[sapply(TableS1, is.numeric)], round, 3)


TableS1 = cbind(TableS1[, 1:2], paste0(TableS1[, 3], " (", TableS1[, 4], ")"), paste0(TableS1[, 5], " (", TableS1[, 6], ")"), paste0(TableS1[, 7], " (", TableS1[, 8], ")"), TableS1[9:12])



TableS1 = cbind(TableS1[, 1:5], paste0(TableS1[, 6], " / ", TableS1[, 7]), TableS1[, 8:9])

setDT(TableS1)

TableS1=TableS1[, lapply(.SD, function(x) ifelse(x %in% c(NA, "NA / NA", "NA (NA)", "NA (NA) / NA (NA)"), "", x))]




colnames(TableS1)=c("", "Df", rep(c("GVIF (GVIF^(1/(2*Df)))"), 3), rep("GVIF", 3))

TableS1[,1] = c("Used gear", "Mesh size", "Targeted taxa", "Fished taxa (ISSCAAP code)", "Soaking time", "Total catch weight", "Presence of an acoustic repellent")


setDF(TableS1)

TableS1 = rbind(colnames(TableS1), TableS1)

colnames(TableS1) = c("", "", "Sex (logistic regression)", "Body mass (linear regression)", "Body size (linear regression)", "Sex (logistic regression)", "Body mass (linear regression)", "Body size (linear regression)")


kable_classic(add_header_above(kbl(TableS1, format = "latex", vline= ""), c("", "", "Common dolphin" = 3 , "Harbour porpoise" = 3)))







```
